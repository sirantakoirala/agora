{"ast":null,"code":"var _jsxFileName = \"D:\\\\firebase-moodle\\\\moodle\\\\src\\\\components\\\\Dashboard\\\\QuestionModal.js\",\n    _s = $RefreshSig$();\n\nimport { doc, getDoc } from \"firebase/firestore\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Header, Modal, Select, Form, Input, TextArea } from \"semantic-ui-react\";\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport { db } from \"../../firebase-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function QuestionModal() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [subjectOptions, setSubjectOptions] = useState([]);\n  const options = [{\n    key: \"m\",\n    text: \"Male\",\n    value: \"male\"\n  }, {\n    key: \"f\",\n    text: \"Female\",\n    value: \"female\"\n  }, {\n    key: \"o\",\n    text: \"Other\",\n    value: \"other\"\n  }];\n  useEffect(() => {\n    async function getSubjects() {\n      const q = query(collection(db, \"subject\"));\n      const querySnapshot = await getDocs(q);\n      const subjects = querySnapshot.docs.map((doc, id) => ({\n        value: doc.data().title,\n        key: id,\n        text: doc.data().title\n      }));\n      console.log(subjects);\n      setSubjectOptions(subjects);\n    }\n\n    getSubjects();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    open: open,\n    trigger: /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: \"Topic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: \"Add a topic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Field, {\n              control: Input,\n              label: \"topic\",\n              placeholder: \"Add a topic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Select,\n            label: \"Subject\",\n            options: subjectOptions,\n            placeholder: \"Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: TextArea,\n            label: \"Topic Description\",\n            placeholder: \"Add a topic description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Button,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"black\",\n        onClick: () => setOpen(false),\n        children: \"Nope\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Yep, that's me\",\n        labelPosition: \"right\",\n        icon: \"checkmark\",\n        onClick: () => setOpen(false),\n        positive: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuestionModal, \"SWIx2Gx3vyaV8X2XMszS0nFIR3c=\");\n\n_c = QuestionModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionModal\");","map":{"version":3,"sources":["D:/firebase-moodle/moodle/src/components/Dashboard/QuestionModal.js"],"names":["doc","getDoc","React","useState","useEffect","Button","Header","Modal","Select","Form","Input","TextArea","collection","query","where","getDocs","db","QuestionModal","open","setOpen","subjectOptions","setSubjectOptions","options","key","text","value","getSubjects","q","querySnapshot","subjects","docs","map","id","data","title","console","log"],"mappings":"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","sourcesContent":["import { doc, getDoc } from \"firebase/firestore\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Header,\r\n  Modal,\r\n  Select,\r\n  Form,\r\n  Input,\r\n  TextArea,\r\n} from \"semantic-ui-react\";\r\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\r\nimport { db } from \"../../firebase-config\";\r\n\r\nexport function QuestionModal() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [subjectOptions, setSubjectOptions] = useState([]);\r\n  const options = [\r\n    { key: \"m\", text: \"Male\", value: \"male\" },\r\n    { key: \"f\", text: \"Female\", value: \"female\" },\r\n    { key: \"o\", text: \"Other\", value: \"other\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    async function getSubjects() {\r\n      const q = query(collection(db, \"subject\"));\r\n\r\n      const querySnapshot = await getDocs(q);\r\n      const subjects = querySnapshot.docs.map((doc, id) => ({\r\n        value: doc.data().title,\r\n        key: id,\r\n        text: doc.data().title,\r\n      }));\r\n      console.log(subjects);\r\n      setSubjectOptions(subjects);\r\n    }\r\n    getSubjects();\r\n  }, []);\r\n\r\n  return (\r\n    <Modal\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      trigger={<Button>Create</Button>}\r\n    >\r\n      <Modal.Header>Topic</Modal.Header>\r\n      <Modal.Content>\r\n        <Modal.Description>\r\n          <Header>Add a topic</Header>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Field\r\n                control={Input}\r\n                label=\"topic\"\r\n                placeholder=\"Add a topic\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Field\r\n              control={Select}\r\n              label=\"Subject\"\r\n              options={subjectOptions}\r\n              placeholder=\"Subject\"\r\n            />\r\n            <Form.Field\r\n              control={TextArea}\r\n              label=\"Topic Description\"\r\n              placeholder=\"Add a topic description\"\r\n            />\r\n\r\n            <Form.Field control={Button}>Submit</Form.Field>\r\n          </Form>\r\n          )\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button color=\"black\" onClick={() => setOpen(false)}>\r\n          Nope\r\n        </Button>\r\n        <Button\r\n          content=\"Yep, that's me\"\r\n          labelPosition=\"right\"\r\n          icon=\"checkmark\"\r\n          onClick={() => setOpen(false)}\r\n          positive\r\n        />\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}