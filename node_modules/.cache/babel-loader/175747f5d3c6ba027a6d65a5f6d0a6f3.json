{"ast":null,"code":"var _jsxFileName = \"D:\\\\firebase-moodle\\\\moodle\\\\src\\\\components\\\\Topic\\\\Topic.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { PostModal } from \"../Dashboard/PostModal\";\nimport { useParams } from \"react-router-dom\";\nimport { Sidebar } from \"../Dashboard/Sidebar\";\nimport { Button, Checkbox, Form, Card, Icon, Label, Image, TextArea } from \"semantic-ui-react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { collection, query, where, getDocs, addDoc, serverTimestamp, onSnapshot, orderBy, setDoc, doc, updateDoc, arrayUnion } from \"firebase/firestore\";\nimport { useUserContext } from \"../../context/userContext\";\nimport { db } from \"../../firebase-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Topic = () => {\n  _s();\n\n  const {\n    topicId\n  } = useParams();\n  const {\n    currentUser\n  } = useUserContext();\n  const [posts, setPosts] = useState([]);\n  const [formState, setFormState] = useState(\"\");\n  const [topic, setTopic] = useState({});\n  useEffect(() => {\n    async function getTopic() {\n      try {\n        const q = query(collection(db, \"topics\"), where(\"topicId\", \"==\", topicId));\n        const querySnapshot = await getDocs(q);\n        const [topic] = querySnapshot.docs.map(post => post.data());\n        console.log(\"Des\" + topic.topicDescription);\n        if (topic.likeId != null) topic.likeIdCount = Object.keys(topic.likeId).length;else topic.likeIdCount = 0;\n        if (topic.dislikeId != null) topic.dislikeIdCount = Object.keys(topic.dislikeId).length;else topic.dislikeIdCount = 0;\n        if (topic.haspinned == null) topic.haspinned = false;\n        setTopic(topic);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    getTopic();\n  }, []);\n  useEffect(() => {\n    async function getPosts() {\n      try {\n        const q = query(collection(db, \"posts\"), where(\"topicId\", \"==\", topicId));\n        console.log(\"getPosts\");\n        const unsub = await onSnapshot(q, querySnapshot => {\n          const posts = querySnapshot.docs.map(post => post.data()).sort((a, b) => b.createdAt - a.createdAt);\n          {\n            posts.map((post, index) => {\n              //            console.log(post.createdAt + (post.pinned == true ? 1000000000000: 0 ));\n              if (post.likeId != null) post.likeIdCount = Object.keys(post.likeId).length;else post.likeIdCount = 0;\n              if (post.dislikeId != null) post.dislikeIdCount = Object.keys(post.dislikeId).length;else post.dislikeIdCount = 0;\n            });\n          }\n          setPosts(posts);\n        });\n        return unsub;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    return getPosts();\n  }, []);\n\n  const handleLikeClick = async (ev, parent) => {\n    ev.preventDefault();\n    if (currentUser.role != \"teacher\") return; //       if(parent)\n\n    console.log(currentUser.role);\n\n    if (parent.likeId.includes(currentUser.uid) == false && parent.dislikeId.includes(currentUser.uid) == false) {\n      var parentDoc;\n      if (parent === topic) parentDoc = doc(db, \"topics\", parent.topicId);else parentDoc = doc(db, \"posts\", parent.postId);\n      await updateDoc(parentDoc, {\n        likeId: arrayUnion(currentUser.uid)\n      });\n      parent.likeIdCount++;\n      parent.likeId.push(currentUser.uid); //setTopic(arr=>[...topics]);\n    }\n  };\n\n  const handledisLikeClick = async (ev, parent) => {\n    ev.preventDefault();\n    console.log(currentUser.role);\n\n    if (parent.likeId.includes(currentUser.uid) == false && parent.dislikeId.includes(currentUser.uid) == false) {\n      var parentDoc;\n      if (parent === topic) parentDoc = doc(db, \"topics\", parent.topicId);else parentDoc = doc(db, \"posts\", parent.postId);\n      await updateDoc(parentDoc, {\n        dislikeId: arrayUnion(currentUser.uid)\n      });\n      parent.dislikeIdCount++;\n      parent.dislikeId.push(currentUser.uid); //setTopic(arr=>[...topics]);\n    }\n  };\n\n  const handlePin = async (ev, post) => {\n    console.log(\"BBBBB\");\n    const postDoc = doc(db, \"posts\", post.postId);\n    await updateDoc(postDoc, {\n      pinned: true\n    });\n    post.pinned = true;\n    const topicDoc = doc(db, \"topics\", topic.topicId);\n    await updateDoc(topicDoc, {\n      haspinned: true\n    });\n    topic.haspinned = true;\n    setTopic(topic);\n    setPosts(arr => [...posts]);\n  };\n\n  const checkIsTeacher = () => {\n    if (currentUser.role == \"teacher\") return true;else return false;\n  };\n\n  const setIconColor = (likeId, uId) => {\n    if (likeId != null && likeId.includes(uId) == true) return \"green\";\n    return \"black\";\n  };\n\n  const setUserIconColor = user => {\n    if (currentUser.displayname == user) return \"red\";\n    return \"black\";\n  };\n\n  const handlePostModal = async () => {\n    console.log(\"AAhahahaA\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sidebar, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: \"100%\"\n      },\n      header: topic.topicTitle,\n      meta: topic.topicSubject,\n      description: topic.topicDescription,\n      extra: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: topic.topicImage,\n          size: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            color: setUserIconColor(topic.user),\n            name: \"user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 23\n          }, this), topic.user]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: e => handleLikeClick(e, topic),\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              color: setIconColor(topic.likeId, currentUser.uid),\n              name: \"thumbs up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 25\n            }, this), topic.likeIdCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: e => handledisLikeClick(e, topic),\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              color: setIconColor(topic.dislikeId, currentUser.uid),\n              name: \"thumbs down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 25\n            }, this), topic.dislikeIdCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostModal, {\n      topicId: topicId,\n      curComment: topic.comment,\n      onShow: handlePostModal()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(Card, {\n      header: post.postTitle,\n      color: post.pinned == true ? \"red\" : \"black\",\n      extra: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: post.postImage,\n          size: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          align: \"right\",\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            color: setUserIconColor(post.user),\n            name: \"user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this), post.user]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: e => handleLikeClick(e, post),\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                color: setIconColor(post.likeId, currentUser.uid),\n                name: \"thumbs up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 25\n              }, this), post.likeIdCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: e => handledisLikeClick(e, post),\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                color: setIconColor(post.dislikeId, currentUser.uid),\n                name: \"thumbs down\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 25\n              }, this), post.dislikeIdCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 25\n            }, this), checkIsTeacher() == true && topic.haspinned == false && /*#__PURE__*/_jsxDEV(Button, {\n              onClick: e => handlePin(e, post),\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                name: \"hand point right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Topic, \"jEdexuNqclJOeQnER+zokI/Ig+U=\", false, function () {\n  return [useParams, useUserContext];\n});\n\n_c = Topic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Topic\");","map":{"version":3,"sources":["D:/firebase-moodle/moodle/src/components/Topic/Topic.js"],"names":["React","useEffect","useState","PostModal","useParams","Sidebar","Button","Checkbox","Form","Card","Icon","Label","Image","TextArea","v4","uuidv4","collection","query","where","getDocs","addDoc","serverTimestamp","onSnapshot","orderBy","setDoc","doc","updateDoc","arrayUnion","useUserContext","db","Topic","topicId","currentUser","posts","setPosts","formState","setFormState","topic","setTopic","getTopic","q","querySnapshot","docs","map","post","data","console","log","topicDescription","likeId","likeIdCount","Object","keys","length","dislikeId","dislikeIdCount","haspinned","err","getPosts","unsub","sort","a","b","createdAt","index","handleLikeClick","ev","parent","preventDefault","role","includes","uid","parentDoc","postId","push","handledisLikeClick","handlePin","postDoc","pinned","topicDoc","arr","checkIsTeacher","setIconColor","uId","setUserIconColor","user","displayname","handlePostModal","width","topicTitle","topicSubject","topicImage","e","comment","postTitle","postImage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from \"react\";\r\nimport { PostModal } from \"../Dashboard/PostModal\"\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Sidebar } from \"../Dashboard/Sidebar\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Form,\r\n  Card,\r\n  Icon,\r\n  Label,\r\n  Image,\r\n  TextArea,\r\n} from \"semantic-ui-react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {\r\n  collection,\r\n  query,\r\n  where,\r\n  getDocs,\r\n  addDoc,\r\n  serverTimestamp,\r\n  onSnapshot,\r\n  orderBy,\r\n  setDoc,\r\n  doc,\r\n  updateDoc,\r\n  arrayUnion,\r\n} from \"firebase/firestore\";\r\nimport { useUserContext } from \"../../context/userContext\";\r\nimport { db } from \"../../firebase-config\";\r\nexport const Topic = () => {\r\n  const { topicId } = useParams();\r\n  const { currentUser } = useUserContext();\r\n  const [posts, setPosts] = useState([]);\r\n  const [formState, setFormState] = useState(\"\");\r\n  const [topic, setTopic] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function getTopic() {\r\n      try {\r\n        const q = query(\r\n          collection(db, \"topics\"),\r\n          where(\"topicId\", \"==\", topicId)\r\n        );\r\n\r\n        const querySnapshot = await getDocs(q);\r\n        const [topic] = querySnapshot.docs.map((post) => post.data());\r\n        console.log(\"Des\"+topic.topicDescription);\r\n        if(topic.likeId != null)\r\n              topic.likeIdCount = Object.keys(topic.likeId).length;\r\n              else topic.likeIdCount = 0;\r\n            if(topic.dislikeId != null)\r\n                topic.dislikeIdCount = Object.keys(topic.dislikeId).length;\r\n                else topic.dislikeIdCount = 0;\r\n            if(topic.haspinned == null)\r\n              topic.haspinned = false;\r\n        setTopic(topic);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    getTopic();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function getPosts() {\r\n      try {\r\n        const q = query(\r\n          collection(db, \"posts\"),\r\n          where(\"topicId\", \"==\", topicId)\r\n        );\r\n          console.log(\"getPosts\");\r\n        const unsub = await onSnapshot(q, (querySnapshot) => {\r\n          const posts = querySnapshot.docs\r\n            .map((post) => post.data())\r\n            .sort((a, b) => ( b.createdAt - a.createdAt));\r\n          {posts.map((post,index) => {\r\n//            console.log(post.createdAt + (post.pinned == true ? 1000000000000: 0 ));\r\n            if(post.likeId != null)\r\n            post.likeIdCount = Object.keys(post.likeId).length;\r\n              else post.likeIdCount = 0;\r\n            if(post.dislikeId != null)\r\n            post.dislikeIdCount = Object.keys(post.dislikeId).length;\r\n                else post.dislikeIdCount = 0;\r\n          })}\r\n          setPosts(posts);\r\n\r\n        });\r\n\r\n        return unsub;\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    return getPosts();\r\n  }, []);\r\n  \r\n  const handleLikeClick = async (ev,parent) =>\r\n   {\r\n    ev.preventDefault();\r\n       if(currentUser.role != \"teacher\") return ;\r\n//       if(parent)\r\n       console.log(currentUser.role);\r\n       if(parent.likeId.includes(currentUser.uid) == false &&\r\n       parent.dislikeId.includes(currentUser.uid) == false )\r\n      {\r\n        var parentDoc;\r\n        if(parent === topic)\r\n          parentDoc = doc(db,\"topics\",parent.topicId);\r\n        else parentDoc = doc(db,\"posts\",parent.postId);\r\n        await  updateDoc(parentDoc,{\r\n            likeId: arrayUnion(currentUser.uid),\r\n          })\r\n        parent.likeIdCount++;\r\n        parent.likeId.push(currentUser.uid);\r\n        //setTopic(arr=>[...topics]);\r\n      }\r\n   }\r\n\r\n   const handledisLikeClick = async (ev,parent) =>\r\n   {\r\n    ev.preventDefault();\r\n       console.log(currentUser.role);\r\n       if(parent.likeId.includes(currentUser.uid) == false &&\r\n       parent.dislikeId.includes(currentUser.uid) == false )\r\n      {\r\n        var parentDoc;\r\n        if(parent === topic)\r\n          parentDoc = doc(db,\"topics\",parent.topicId);\r\n        else parentDoc = doc(db,\"posts\",parent.postId);\r\n        await  updateDoc(parentDoc,{\r\n            dislikeId: arrayUnion(currentUser.uid),\r\n          });\r\n        parent.dislikeIdCount++;\r\n        parent.dislikeId.push(currentUser.uid);\r\n        //setTopic(arr=>[...topics]);\r\n      }\r\n   }\r\n   const handlePin = async(ev,post) =>\r\n   {\r\n      console.log(\"BBBBB\");\r\n      const postDoc = doc(db, \"posts\",post.postId);\r\n      await updateDoc(postDoc,\r\n        {\r\n          pinned:true,\r\n        });\r\n        post.pinned = true;\r\n      const topicDoc = doc(db,\"topics\",topic.topicId);\r\n      await updateDoc(topicDoc,{\r\n          haspinned:true,\r\n      });\r\n      topic.haspinned = true;\r\n      setTopic(topic);\r\n      setPosts(arr=>[...posts]);\r\n      \r\n   }\r\n   const checkIsTeacher = () =>\r\n   {\r\n     if(currentUser.role == \"teacher\") return true;\r\n     else return false;\r\n   }\r\n   const setIconColor = (likeId, uId) =>\r\n   {\r\n     if(likeId != null && likeId.includes(uId) == true)\r\n       return \"green\";\r\n    return \"black\";\r\n   }\r\n\r\n   const setUserIconColor = (user) =>\r\n   {\r\n     if(currentUser.displayname == user)\r\n      return \"red\";\r\n     return \"black\";\r\n   }\r\n   const handlePostModal =async () =>\r\n   {\r\n     console.log(\"AAhahahaA\");\r\n   }\r\n  return (\r\n    <Sidebar>\r\n      {/* <Card style={{ width: \"100%\" }}>\r\n        <Card.Content style={{ width: \"100% !important\" }}>\r\n          <Card.Header>{topic.topicTitle}</Card.Header>\r\n          <Card.Meta>{topic.topicSubject}</Card.Meta>\r\n          <Image src={topic.topicImage} size=\"huge\" />\r\n          <Card.Description>{topic.topicDescription}</Card.Description>\r\n          <Label>{topic.user}</Label>\r\n        </Card.Content>\r\n        \r\n      </Card> */}\r\n      <Card\r\n                  style={{ width: \"100%\" }}\r\n                  header={topic.topicTitle}\r\n                  meta={topic.topicSubject}  \r\n                  description={topic.topicDescription}                \r\n                  extra={\r\n                    <div >\r\n                      <Image src={topic.topicImage} size=\"medium\" />\r\n                      <div>\r\n                      <Icon color={setUserIconColor(topic.user)} name=\"user\" />\r\n                      {topic.user}\r\n                      </div>\r\n                      { <div>\r\n                        <Button  onClick={(e) => handleLikeClick(e,topic)}>\r\n                        <Icon color={setIconColor(topic.likeId,currentUser.uid)} name='thumbs up' />\r\n                        {topic.likeIdCount}\r\n                        </Button>\r\n                        <Button onClick={(e) => handledisLikeClick(e,topic)}>\r\n                        <Icon color={setIconColor(topic.dislikeId,currentUser.uid)} name='thumbs down' />\r\n                        {topic.dislikeIdCount}\r\n                        </Button>\r\n                        {/* <Button disabled>\r\n                        <Icon color={setIconColor(topic.likeId,currentUser.uid)} name='comment' />\r\n                        {topic.comment}\r\n                        </Button> */}\r\n                    </div> }\r\n                      \r\n                    </div>\r\n                  }\r\n                />\r\n\r\n      <PostModal topicId = {topicId} curComment={topic.comment} onShow={handlePostModal()}/>\r\n\r\n      <h1>Posts</h1>\r\n      {posts.map((post) => (\r\n        <Card\r\n          header={post.postTitle}\r\n          color={post.pinned == true? \"red\" : \"black\"}\r\n          extra={\r\n                <div>\r\n                  \r\n                <Image src={post.postImage} size=\"medium\" />\r\n                <div align=\"right\">\r\n                <Icon  color={setUserIconColor(post.user)}  name=\"user\" />\r\n                {post.user}\r\n                </div>\r\n                <div>\r\n                  {<div>\r\n                        <Button  onClick={(e) => handleLikeClick(e,post)}>\r\n                        <Icon color={setIconColor(post.likeId,currentUser.uid)} name='thumbs up' />\r\n                        {post.likeIdCount}\r\n                        </Button>\r\n                        <Button  onClick={(e) => handledisLikeClick(e,post)}>\r\n                        <Icon color={setIconColor(post.dislikeId,currentUser.uid)} name='thumbs down' />\r\n                        {post.dislikeIdCount}\r\n                        </Button>\r\n                        { checkIsTeacher()==true && topic.haspinned==false &&\r\n                        (<Button onClick={(e) => handlePin(e,post)}>\r\n                          <Icon name='hand point right' />\r\n                        </Button>)\r\n                        }\r\n                    </div>}\r\n              </div>\r\n                \r\n              </div>\r\n            }\r\n        />\r\n      ))}\r\n    </Sidebar>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}