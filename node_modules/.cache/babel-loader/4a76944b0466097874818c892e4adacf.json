{"ast":null,"code":"var _jsxFileName = \"D:\\\\firebase-moodle\\\\moodle\\\\src\\\\components\\\\Dashboard\\\\QuestionModal.js\",\n    _s = $RefreshSig$();\n\nimport { doc, getDoc } from \"firebase/firestore\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Header, Modal, Select, Form, Input, TextArea } from \"semantic-ui-react\";\nimport { collection, query, where, getDocs, addDoc } from \"firebase/firestore\";\nimport { db } from \"../../firebase-config\";\nimport { useUserContext } from \"../../context/userContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  topicTitle: \"\",\n  topicSubject: \"\",\n  topicDescription: \"\"\n};\nexport function QuestionModal() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const {\n    currentUser\n  } = useUserContext();\n  const [subjectOptions, setSubjectOptions] = useState([]);\n  const [formState, setFormState] = useState(initialState);\n\n  const handleChange = ev => {\n    setFormState(prev => ({ ...prev,\n      [ev.target.id]: ev.target.value\n    }));\n  };\n\n  useEffect(() => {\n    async function getSubjects() {\n      const q = query(collection(db, \"subject\"));\n      const querySnapshot = await getDocs(q);\n      const subjects = querySnapshot.docs.map((doc, id) => ({\n        value: doc.data().title,\n        key: id,\n        text: doc.data().title\n      }));\n      console.log(subjects);\n      setSubjectOptions(subjects);\n    }\n\n    getSubjects();\n  }, []);\n\n  const handleTopicSubmit = async ev => {\n    ev.preventDefault();\n\n    try {\n      if (!formState.topicDescription === \"\" || !formState.topicSubject === \"\" || formState.topicTitle === \"\") {\n        return;\n      }\n\n      const topicCollRef = collection(db, \"topics\"); // const subjectCollRef = collection(db, \"subject\");\n\n      await addDoc(topicCollRef, { ...formState,\n        user: currentUser.email\n      });\n      setOpen(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    open: open,\n    trigger: /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: \"Topic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: \"Add a topic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Field, {\n              control: Input,\n              label: \"topic\",\n              placeholder: \"Add a topic\",\n              id: \"topicTitle\",\n              value: formState.topicTitle,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Select,\n            label: \"Subject\",\n            options: subjectOptions,\n            placeholder: \"Subject\",\n            id: \"topicSubject\",\n            onChange: handleChange,\n            value: formState.topicSubject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: TextArea,\n            label: \"Topic Description\",\n            id: \"topicSubject\",\n            placeholder: \"Add a topic description\",\n            onChange: handleChange,\n            value: formState.topicDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Button,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"black\",\n        onClick: () => setOpen(false),\n        children: \"Nope\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Yep, that's me\",\n        labelPosition: \"right\",\n        icon: \"checkmark\",\n        onClick: () => setOpen(false),\n        positive: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuestionModal, \"+svlFAnR/uOgvTjmr2tmFqnQQsQ=\", false, function () {\n  return [useUserContext];\n});\n\n_c = QuestionModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionModal\");","map":{"version":3,"sources":["D:/firebase-moodle/moodle/src/components/Dashboard/QuestionModal.js"],"names":["doc","getDoc","React","useState","useEffect","Button","Header","Modal","Select","Form","Input","TextArea","collection","query","where","getDocs","addDoc","db","useUserContext","initialState","topicTitle","topicSubject","topicDescription","QuestionModal","open","setOpen","currentUser","subjectOptions","setSubjectOptions","formState","setFormState","handleChange","ev","prev","target","id","value","getSubjects","q","querySnapshot","subjects","docs","map","data","title","key","text","console","log","handleTopicSubmit","preventDefault","topicCollRef","user","email","err"],"mappings":"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","sourcesContent":["import { doc, getDoc } from \"firebase/firestore\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Header,\r\n  Modal,\r\n  Select,\r\n  Form,\r\n  Input,\r\n  TextArea,\r\n} from \"semantic-ui-react\";\r\nimport { collection, query, where, getDocs, addDoc } from \"firebase/firestore\";\r\nimport { db } from \"../../firebase-config\";\r\nimport { useUserContext } from \"../../context/userContext\";\r\n\r\nconst initialState = {\r\n  topicTitle: \"\",\r\n  topicSubject: \"\",\r\n  topicDescription: \"\",\r\n};\r\nexport function QuestionModal() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const { currentUser } = useUserContext();\r\n\r\n  const [subjectOptions, setSubjectOptions] = useState([]);\r\n  const [formState, setFormState] = useState(initialState);\r\n  const handleChange = (ev) => {\r\n    setFormState((prev) => ({ ...prev, [ev.target.id]: ev.target.value }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getSubjects() {\r\n      const q = query(collection(db, \"subject\"));\r\n\r\n      const querySnapshot = await getDocs(q);\r\n      const subjects = querySnapshot.docs.map((doc, id) => ({\r\n        value: doc.data().title,\r\n        key: id,\r\n        text: doc.data().title,\r\n      }));\r\n      console.log(subjects);\r\n      setSubjectOptions(subjects);\r\n    }\r\n    getSubjects();\r\n  }, []);\r\n\r\n  const handleTopicSubmit = async (ev) => {\r\n    ev.preventDefault();\r\n    try {\r\n      if (\r\n        !formState.topicDescription === \"\" ||\r\n        !formState.topicSubject === \"\" ||\r\n        formState.topicTitle === \"\"\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      const topicCollRef = collection(db, \"topics\");\r\n      // const subjectCollRef = collection(db, \"subject\");\r\n      await addDoc(topicCollRef, { ...formState, user: currentUser.email });\r\n      setOpen(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      trigger={<Button>Create</Button>}\r\n    >\r\n      <Modal.Header>Topic</Modal.Header>\r\n      <Modal.Content>\r\n        <Modal.Description>\r\n          <Header>Add a topic</Header>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Field\r\n                control={Input}\r\n                label=\"topic\"\r\n                placeholder=\"Add a topic\"\r\n                id=\"topicTitle\"\r\n                value={formState.topicTitle}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Field\r\n              control={Select}\r\n              label=\"Subject\"\r\n              options={subjectOptions}\r\n              placeholder=\"Subject\"\r\n              id=\"topicSubject\"\r\n              onChange={handleChange}\r\n              value={formState.topicSubject}\r\n            />\r\n            <Form.Field\r\n              control={TextArea}\r\n              label=\"Topic Description\"\r\n              id=\"topicSubject\"\r\n              placeholder=\"Add a topic description\"\r\n              onChange={handleChange}\r\n              value={formState.topicDescription}\r\n            />\r\n\r\n            <Form.Field control={Button}>Submit</Form.Field>\r\n          </Form>\r\n          )\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button color=\"black\" onClick={() => setOpen(false)}>\r\n          Nope\r\n        </Button>\r\n        <Button\r\n          content=\"Yep, that's me\"\r\n          labelPosition=\"right\"\r\n          icon=\"checkmark\"\r\n          onClick={() => setOpen(false)}\r\n          positive\r\n        />\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}