{"ast":null,"code":"var _jsxFileName = \"D:\\\\firebase-moodle\\\\moodle\\\\src\\\\components\\\\Quizzes\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport { useUserContext } from \"../../context/userContext\";\nimport { db } from \"../../firebase-config\";\nimport { useEffect, useState } from \"react\";\nimport { collection, query, getDocs, where, doc, updateDoc, arrayUnion } from \"firebase/firestore\";\nimport { Sidebar } from \"../Dashboard/Sidebar\";\nimport { useParams } from \"react-router-dom\";\nimport { Button, Card, Image, Form, Radio, Message } from \"semantic-ui-react\";\nimport QuizModal from \"../Dashboard/QuizModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Quiz = () => {\n  _s();\n\n  const {\n    subject\n  } = useParams();\n  const {\n    currentUser\n  } = useUserContext();\n  const isNotStudentRole = currentUser.role !== \"student\";\n  const [formState, setFormState] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  console.log(formState);\n  const [subjectQuizzes, setSubjectQuizzes] = useState([]);\n  useEffect(() => {\n    async function getSubjects() {\n      const q = query(collection(db, \"quizzes\"), where(\"subject\", \"==\", subject));\n      const querySnapshot = await getDocs(q);\n      const quizzes = querySnapshot.docs.map(doc => doc.data());\n      setSubjectQuizzes(quizzes);\n    }\n\n    getSubjects();\n  }, []);\n\n  const handleChange = (e, _ref) => {\n    let {\n      value\n    } = _ref;\n    setFormState(value);\n  };\n\n  const handleScore = ev => {\n    ev.preventDefault();\n    console.log(subjectQuizzes);\n    const score = subjectQuizzes.filter(quiz => formState === quiz.correctAnswer).length;\n    setScore(score);\n    setSubmitted(true);\n    console.log(score);\n    const userDoc = doc(db, \"users\", currentUser.uid);\n    const current = new Date();\n    const curdate = `${current.getDate()}/${current.getMonth() + 1}/${current.getFullYear()} ${current.getHours()}:${current.getMinutes()}:${current.getSeconds()}`;\n    updateDoc(userDoc, {\n      history: arrayUnion(\"Quiz^Test^\" + curdate + \"^\" + \"Score:\" + score + \"/\" + Object.keys(subjectQuizzes).length)\n    });\n  };\n\n  const options = [{\n    key: \"1\",\n    text: subject,\n    value: subject\n  }];\n\n  if (subjectQuizzes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Quiz - \", subject]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"20px 0\"\n        },\n        children: isNotStudentRole && /*#__PURE__*/_jsxDEV(QuizModal, {\n          subjectOptions: options,\n          currentUser: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        children: [/*#__PURE__*/_jsxDEV(Message.Header, {\n          children: \"No quizzes found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Currently no quizzes is available for this particular subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Sidebar, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Quiz - \", subject]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), submitted && /*#__PURE__*/_jsxDEV(Message, {\n      success: true,\n      header: \"Your current score is\",\n      content: `${score}/${subjectQuizzes.length}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"20px 0\"\n      },\n      children: isNotStudentRole && /*#__PURE__*/_jsxDEV(QuizModal, {\n        subjectOptions: options,\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleScore,\n      children: [subjectQuizzes.map(quiz => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: quiz.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Description, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n            extra: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              children: /*#__PURE__*/_jsxDEV(Radio, {\n                label: quiz.answer1,\n                name: quiz.quizId,\n                value: quiz.answer1,\n                onChange: handleChange,\n                checked: formState === quiz.answer1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: /*#__PURE__*/_jsxDEV(Radio, {\n                label: quiz.answer2,\n                name: quiz.quizId,\n                value: quiz.answer2,\n                onChange: handleChange,\n                checked: formState === quiz.answer2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: /*#__PURE__*/_jsxDEV(Radio, {\n                label: quiz.answer3,\n                name: quiz.quizId,\n                value: quiz.answer3,\n                onChange: handleChange,\n                checked: formState === quiz.answer3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: /*#__PURE__*/_jsxDEV(Radio, {\n                label: quiz.answer4,\n                name: quiz.quizId,\n                value: quiz.answer4,\n                onChange: handleChange,\n                checked: formState === quiz.answer4\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, quiz.quizId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Quiz, \"Vwh7zUp0zKUSLxZ/mcl6ITNt48o=\", false, function () {\n  return [useParams, useUserContext];\n});\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["D:/firebase-moodle/moodle/src/components/Quizzes/Quiz.js"],"names":["useUserContext","db","useEffect","useState","collection","query","getDocs","where","doc","updateDoc","arrayUnion","Sidebar","useParams","Button","Card","Image","Form","Radio","Message","QuizModal","Quiz","subject","currentUser","isNotStudentRole","role","formState","setFormState","submitted","setSubmitted","score","setScore","console","log","subjectQuizzes","setSubjectQuizzes","getSubjects","q","querySnapshot","quizzes","docs","map","data","handleChange","e","value","handleScore","ev","preventDefault","filter","quiz","correctAnswer","length","userDoc","uid","current","Date","curdate","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","history","Object","keys","options","key","text","padding","width","question","answer1","quizId","answer2","answer3","answer4"],"mappings":"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","sourcesContent":["import { useUserContext } from \"../../context/userContext\";\r\nimport { db } from \"../../firebase-config\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { collection, query, getDocs, where,doc,updateDoc,arrayUnion} from \"firebase/firestore\";\r\nimport { Sidebar } from \"../Dashboard/Sidebar\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Button, Card, Image, Form, Radio, Message } from \"semantic-ui-react\";\r\nimport QuizModal from \"../Dashboard/QuizModal\";\r\n\r\nexport const Quiz = () => {\r\n  const { subject } = useParams();\r\n  const { currentUser } = useUserContext();\r\n  const isNotStudentRole = currentUser.role !== \"student\";\r\n  const [formState, setFormState] = useState(\"\");\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  console.log(formState);\r\n\r\n  const [subjectQuizzes, setSubjectQuizzes] = useState([]);\r\n  useEffect(() => {\r\n    async function getSubjects() {\r\n      const q = query(\r\n        collection(db, \"quizzes\"),\r\n        where(\"subject\", \"==\", subject)\r\n      );\r\n\r\n      const querySnapshot = await getDocs(q);\r\n      const quizzes = querySnapshot.docs.map((doc) => doc.data());\r\n\r\n      setSubjectQuizzes(quizzes);\r\n    }\r\n    getSubjects();\r\n  }, []);\r\n  const handleChange = (e, { value }) => {\r\n    setFormState(value);\r\n  };\r\n\r\n  const handleScore = (ev) => {\r\n    ev.preventDefault();\r\n    console.log(subjectQuizzes);\r\n    const score = subjectQuizzes.filter(\r\n      (quiz) => formState === quiz.correctAnswer\r\n    ).length;\r\n    setScore(score);\r\n    setSubmitted(true);\r\n    console.log(score);\r\n    const userDoc = doc(db, \"users\", currentUser.uid);\r\n    const current = new Date();\r\n    const curdate = `${current.getDate()}/${current.getMonth()+1}/${current.getFullYear()} ${current.getHours()}:${current.getMinutes()}:${current.getSeconds()}`;\r\n    updateDoc(userDoc,\r\n      {\r\n        history: arrayUnion(\"Quiz^Test^\"+curdate+\"^\"+\"Score:\"+score+\"/\"+Object.keys(subjectQuizzes).length),\r\n      });\r\n  };\r\n  const options = [{ key: \"1\", text: subject, value: subject }];\r\n  if (subjectQuizzes.length === 0) {\r\n    return (\r\n      <Sidebar>\r\n        <h1>Quiz - {subject}</h1>\r\n\r\n        <div style={{ padding: \"20px 0\" }}>\r\n          {isNotStudentRole && (\r\n            <QuizModal subjectOptions={options} currentUser={currentUser} />\r\n          )}\r\n        </div>\r\n        <Message>\r\n          <Message.Header>No quizzes found</Message.Header>\r\n          <p>Currently no quizzes is available for this particular subject</p>\r\n        </Message>\r\n      </Sidebar>\r\n    );\r\n  }\r\n  return (\r\n    <Sidebar>\r\n      <h1>Quiz - {subject}</h1>\r\n\r\n      {submitted && (\r\n        <Message\r\n          success\r\n          header=\"Your current score is\"\r\n          content={`${score}/${subjectQuizzes.length}`}\r\n        />\r\n      )}\r\n\r\n      <div style={{ padding: \"20px 0\" }}>\r\n        {isNotStudentRole && (\r\n          <QuizModal subjectOptions={options} currentUser={currentUser} />\r\n        )}\r\n      </div>\r\n\r\n      <Form onSubmit={handleScore}>\r\n        {subjectQuizzes.map((quiz) => {\r\n          return (\r\n            <Card style={{ width: \"100%\" }} key={quiz.quizId}>\r\n              <Card.Content>\r\n                <Card.Header>{quiz.question}</Card.Header>\r\n                <Card.Description></Card.Description>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Form.Field>\r\n                  <Radio\r\n                    label={quiz.answer1}\r\n                    name={quiz.quizId}\r\n                    value={quiz.answer1}\r\n                    onChange={handleChange}\r\n                    checked={formState === quiz.answer1}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <Radio\r\n                    label={quiz.answer2}\r\n                    name={quiz.quizId}\r\n                    value={quiz.answer2}\r\n                    onChange={handleChange}\r\n                    checked={formState === quiz.answer2}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <Radio\r\n                    label={quiz.answer3}\r\n                    name={quiz.quizId}\r\n                    value={quiz.answer3}\r\n                    onChange={handleChange}\r\n                    checked={formState === quiz.answer3}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <Radio\r\n                    label={quiz.answer4}\r\n                    name={quiz.quizId}\r\n                    value={quiz.answer4}\r\n                    onChange={handleChange}\r\n                    checked={formState === quiz.answer4}\r\n                  />\r\n                </Form.Field>\r\n              </Card.Content>\r\n            </Card>\r\n          );\r\n        })}\r\n        <Button primary type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </Sidebar>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}