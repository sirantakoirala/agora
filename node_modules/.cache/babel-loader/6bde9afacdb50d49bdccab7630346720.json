{"ast":null,"code":"var _jsxFileName = \"D:\\\\firebase-moodle\\\\moodle\\\\src\\\\components\\\\Topic\\\\Topic.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Topic = () => {\n  _s();\n\n  const {\n    topicId\n  } = useParams(); // useEffect(() => {\n  //   async function getTopics() {\n  //     try {\n  //       const q = query(collection(db, \"topics\"), orderBy(\"createdAt\", \"desc\"));\n  //       const unsub = await onSnapshot(q, (querySnapshot) => {\n  //         const topics = querySnapshot.docs.map((topic) => topic.data());\n  //         setTopics(topics);\n  //       });\n  //       return unsub;\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   }\n  //   return getTopics();\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Topic, \"11nvDXGjO1ebkehQgvCCT9TXuxI=\", false, function () {\n  return [useParams];\n});\n\n_c = Topic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Topic\");","map":{"version":3,"sources":["D:/firebase-moodle/moodle/src/components/Topic/Topic.js"],"names":["React","useEffect","useParams","Topic","topicId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAcF,SAAS,EAA7B,CADyB,CAGzB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAtBM;;GAAMC,K;UACSD,S;;;KADTC,K","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport const Topic = () => {\r\n  const { topicId } = useParams();\r\n\r\n  // useEffect(() => {\r\n  //   async function getTopics() {\r\n  //     try {\r\n  //       const q = query(collection(db, \"topics\"), orderBy(\"createdAt\", \"desc\"));\r\n\r\n  //       const unsub = await onSnapshot(q, (querySnapshot) => {\r\n  //         const topics = querySnapshot.docs.map((topic) => topic.data());\r\n  //         setTopics(topics);\r\n  //       });\r\n\r\n  //       return unsub;\r\n  //     } catch (err) {\r\n  //       console.log(err);\r\n  //     }\r\n  //   }\r\n  //   return getTopics();\r\n  // }, []);\r\n\r\n  return <Sidebar></Sidebar>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}