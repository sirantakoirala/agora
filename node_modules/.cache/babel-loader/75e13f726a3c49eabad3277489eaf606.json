{"ast":null,"code":"var _jsxFileName = \"E:\\\\Uni\\\\Project\\\\qna_forum\\\\Agora v1.0.2\\\\src\\\\components\\\\Dashboard\\\\SubjectModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Header, Modal, Form, Input, Menu } from \"semantic-ui-react\";\nimport { useUserContext } from \"../../context/userContext\";\nimport { db } from \"../../firebase-config\";\nimport { collection, addDoc, updateDoc, arrayUnion, doc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SubjectModal() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [subject, setSubject] = useState(\"\");\n  const [courseId, setCourseId] = useState(\"\");\n  const {\n    currentUser\n  } = useUserContext();\n\n  const handleSubject = async ev => {\n    ev.preventDefault();\n\n    try {\n      if (!subject) return;\n      const subjectCollRef = collection(db, \"subject\");\n      await addDoc(subjectCollRef, {\n        title: subject,\n        courseId: courseId,\n        user: currentUser.uid\n      });\n      const userDoc = doc(db, \"users\", currentUser.uid);\n      const current = new Date();\n      const curdate = `${current.getDate()}/${current.getMonth() + 1}/${current.getFullYear()} ${current.getHours()}:${current.getMinutes()}:${current.getSeconds()}`;\n      updateDoc(userDoc, {\n        history: arrayUnion(\"Subject^Create^\" + curdate + \"^\" + \"SubjectTitle:\" + subject)\n      });\n      setOpen(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    open: open,\n    trigger: /*#__PURE__*/_jsxDEV(Menu.Item, {\n      children: \" Create a Subject\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: \"Subject\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: \"Add a Subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubject,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Field, {\n              control: Input,\n              label: \"Subject Name\",\n              placeholder: \"Name of New Subject\",\n              onChange: ev => setSubject(ev.target.value),\n              value: subject\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Field, {\n              control: Input,\n              label: \"Course Code\",\n              placeholder: \"Course Code\",\n              onChange: ev => setCourseId(ev.target.value),\n              value: courseId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Button,\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SubjectModal, \"w2PCgzMQ32hLprV47ozcyw4XgUs=\", false, function () {\n  return [useUserContext];\n});\n\n_c = SubjectModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubjectModal\");","map":{"version":3,"sources":["E:/Uni/Project/qna_forum/Agora v1.0.2/src/components/Dashboard/SubjectModal.js"],"names":["React","useState","Button","Header","Modal","Form","Input","Menu","useUserContext","db","collection","addDoc","updateDoc","arrayUnion","doc","SubjectModal","open","setOpen","subject","setSubject","courseId","setCourseId","currentUser","handleSubject","ev","preventDefault","subjectCollRef","title","user","uid","userDoc","current","Date","curdate","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","history","err","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Header, Modal, Form, Input, Menu } from \"semantic-ui-react\";\r\nimport { useUserContext } from \"../../context/userContext\";\r\nimport { db } from \"../../firebase-config\";\r\n\r\nimport { collection, addDoc,updateDoc,arrayUnion,doc } from \"firebase/firestore\";\r\n\r\nexport function SubjectModal() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [courseId, setCourseId] = useState(\"\");\r\n  const { currentUser } = useUserContext();\r\n  const handleSubject = async (ev) => {\r\n    ev.preventDefault();\r\n    try {\r\n      if (!subject) return;\r\n      const subjectCollRef = collection(db, \"subject\");\r\n      await addDoc(subjectCollRef, {\r\n        title: subject,\r\n        courseId:courseId,\r\n        user: currentUser.uid,\r\n      });\r\n      \r\n      const userDoc = doc(db, \"users\", currentUser.uid);\r\n      const current = new Date();\r\n      const curdate = `${current.getDate()}/${current.getMonth()+1}/${current.getFullYear()} ${current.getHours()}:${current.getMinutes()}:${current.getSeconds()}`;\r\n      updateDoc(userDoc,\r\n        {\r\n          history: arrayUnion(\"Subject^Create^\"+curdate+\"^\"+\"SubjectTitle:\"+subject),\r\n        });\r\n      setOpen(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <Modal \r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      trigger={<Menu.Item> Create a Subject</Menu.Item>}\r\n    >\r\n      <Modal.Header>Subject</Modal.Header>\r\n      <Modal.Content>\r\n        <Modal.Description>\r\n          <Header>Add a Subject</Header>\r\n          <Form onSubmit={handleSubject}>\r\n            <Form.Group>\r\n              <Form.Field\r\n                control={Input}\r\n                label=\"Subject Name\"\r\n                placeholder=\"Name of New Subject\"\r\n                onChange={(ev) => setSubject(ev.target.value)}\r\n                value={subject}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Field\r\n                \r\n                  control={Input}\r\n                  label=\"Course Code\"\r\n                  placeholder=\"Course Code\"\r\n                  onChange={(ev) => setCourseId(ev.target.value)}\r\n                  value={courseId}\r\n              />\r\n            </Form.Group>\r\n            <Form.Field control={Button} type=\"submit\">\r\n              Submit\r\n            </Form.Field>\r\n          </Form>\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}