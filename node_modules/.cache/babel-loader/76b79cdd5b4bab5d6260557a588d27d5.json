{"ast":null,"code":"var _jsxFileName = \"D:\\\\firebase-moodle\\\\moodle\\\\src\\\\components\\\\User\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Form, Header, Image, Loader, Dimmer, Message, Segment, Check, Checkbox, Icon } from \"semantic-ui-react\";\nimport { Sidebar } from \"../Dashboard/Sidebar\";\nimport AgoraLogo from \"../../images/logo.png\";\nimport { useUserContext } from \"../../context/userContext\";\nimport { updateEmail } from \"firebase/auth\";\nimport { ref, getDownloadURL, uploadBytesResumable } from \"firebase/storage\";\nimport { updateDoc, doc } from \"firebase/firestore\";\nimport { db, storage } from \"../../firebase-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Profile = () => {\n  _s();\n\n  const initialState = {\n    userName: \"\",\n    email: \"\",\n    address: \"\",\n    birthdate: \"\",\n    phoneNumber: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    role: \"student\",\n    avatarUrl: 'https://react.semantic-ui.com/images/wireframe/image.png',\n    avatar: null\n  };\n  const initalChangeState = {\n    userName: false,\n    email: false,\n    address: false,\n    birthdate: false,\n    phoneNumber: false,\n    password: false,\n    confirmPassword: false,\n    role: false,\n    avatarUrl: false,\n    avatar: false\n  };\n  const [loading, setLoading] = useState(false);\n  const [formState, setFormState] = useState(initialState);\n  const [formChangeState, setChangeState] = useState(initalChangeState);\n  const [isUpdateInProgress, setUpdateInProgress] = useState(false);\n  const {\n    updateUserPassword,\n    currentUser\n  } = useUserContext();\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [passAndConfirmPass, setPassAndConfirmPass] = useState(true);\n  const [passValid, setPassValid] = useState(true);\n  useEffect(() => {\n    const getProfile = async () => {\n      try {\n        setFormState(prev => ({ ...prev,\n          role: currentUser.role,\n          email: currentUser.email,\n          phoneNumber: currentUser.phone,\n          address: currentUser.address,\n          birthdate: currentUser.birthdate,\n          avatarUrl: currentUser.avatar == undefined ? \"/images/uicon.png\" : currentUser.avatar,\n          userName: currentUser.uname\n        }));\n        console.log(formState);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getProfile(); //console.log(currentUser.role);\n  }, []);\n\n  const handleUpdate = async () => {\n    console.log(formState);\n    console.log(formChangeState);\n    console.log(formState.isTeacher); // if (\n    //   formState.userName == \"\"||\n    //   formState.email === \"\" ||\n    //   formState.phoneNumber == \"\"||\n    //   formState.password === \"\" ||\n    //   formState.confirmPassword === \"\" ||\n    //   formState.avatar === null\n    // )\n    // {\n    //     return;\n    // }\n\n    if (formState.confirmPassword !== formState.password) {\n      setPassAndConfirmPass(false);\n      return;\n    } // if (\n    //   !formState.password.match(\n    //     /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/g\n    //   )\n    // ) {\n    //   setPassValid(false);\n    //   return;\n    // }\n\n\n    try {\n      setUpdateInProgress(true); //if(formChangeState.email == true)\n      //const { user } = await updateUserPassword(formState.password);\n\n      if (formChangeState.avatar) {\n        const storageRef = ref(storage, `images/${formState.topicSubject}`);\n        const uploadTask = uploadBytesResumable(storageRef, formState.avatar); // Listen for state changes, errors, and completion of the upload.\n\n        uploadTask.on(\"state_changed\", snapshot => {\n          // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n          const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n          console.log(\"Upload is \" + progress + \"% done\");\n\n          switch (snapshot.state) {\n            case \"paused\":\n              console.log(\"Upload is paused\");\n              break;\n\n            case \"running\":\n              console.log(\"Upload is running\");\n              break;\n          }\n        }, error => {\n          // A full list of error codes is available at\n          // https://firebase.google.com/docs/storage/web/handle-errors\n          switch (error.code) {\n            case \"storage/unauthorized\":\n              // User doesn't have permission to access the object\n              break;\n\n            case \"storage/canceled\":\n              // User canceled the upload\n              break;\n            // ...\n\n            case \"storage/unknown\":\n              // Unknown error occurred, inspect error.serverResponse\n              break;\n          }\n        }, () => {\n          // Upload completed successfully, now we can get the download URL\n          getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n            const userCollDoc = doc(db, \"users\", currentUser.uid);\n            await updateDoc(userCollDoc, {\n              avatar: downloadURL\n            });\n            setLoading(false);\n          });\n        });\n      }\n\n      console.log(currentUser.uid);\n      const userDoc = doc(db, \"users\", currentUser.uid);\n      await updateDoc(userDoc, {\n        address: formState.address,\n        phone: formState.phoneNumber,\n        birthdate: formState.birthdate\n      });\n      setUpdateInProgress(false);\n      setIsSuccess(true);\n    } catch (err) {\n      console.log(err);\n      setIsSuccess(false);\n      setUpdateInProgress(false);\n    }\n  };\n\n  const handleImageChange = ev => {\n    console.log(\"AA\" + URL.createObjectURL(ev.target.files[0]));\n    setFormState(prev => ({ ...prev,\n      avatarUrl: URL.createObjectURL(ev.target.files[0]),\n      [ev.target.id]: ev.target.files[0]\n    }));\n    setChangeState(prev => ({ ...prev,\n      avatarUrl: true,\n      avatar: true\n    }));\n  };\n\n  const handleChange = ev => {\n    setFormState(prev => ({ ...prev,\n      [ev.target.id]: ev.target.value\n    }));\n    setChangeState(prev => ({ ...prev,\n      [ev.target.id]: true\n    }));\n  };\n\n  const handleChangeTeacher = ev => {\n    setFormState(prev => ({ ...prev,\n      [ev.target.id]: ev.target.checked == 0 ? \"student\" : \"teacher\"\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sidebar, {\n    children: [loading && /*#__PURE__*/_jsxDEV(Dimmer, {\n      active: true,\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        size: \"mini\",\n        children: \"Submitting your question....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      size: \"large\",\n      onSubmit: handleUpdate,\n      children: /*#__PURE__*/_jsxDEV(Segment, {\n        stacked: true,\n        children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n          label: /*#__PURE__*/_jsxDEV(Image, {\n            label: \"UserFileImage\",\n            src: formState.avatarUrl,\n            size: \"medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this),\n          labelPostion: \"left\",\n          placeholder: \"\",\n          onChange: handleImageChange,\n          type: \"file\",\n          id: \"avatar\",\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          fluid: true,\n          label: \"UserName\",\n          icon: \"user\",\n          iconPosition: \"left\",\n          id: \"userName\",\n          onChange: handleChange,\n          defaultValue: formState.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          widths: \"equal\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n            fluid: true,\n            label: \"Email Address\",\n            icon: \"mail\",\n            iconPosition: \"left\",\n            id: \"email\",\n            onChange: handleChange,\n            defaultValue: formState.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            fluid: true,\n            label: \"Phone Number\",\n            icon: \"phone\",\n            iconPosition: \"left\",\n            type: \"tel\",\n            onChange: handleChange,\n            id: \"phoneNumber\",\n            defaultValue: formState.phoneNumber,\n            onKeyPress: event => {//if (!/[0-9]/.test(event.key)) {\n              //  event.preventDefault();\n              //}\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          widths: \"equal\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n            fluid: true,\n            label: \"Address\",\n            icon: \"address card\",\n            iconPosition: \"left\",\n            id: \"address\",\n            type: \"address\",\n            defaultValue: formState.address,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            fluid: true,\n            label: \"DOB\",\n            icon: \"calendar\",\n            iconPosition: \"left\",\n            id: \"birthdate\",\n            type: \"date\",\n            defaultValue: formState.birthdate,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          fluid: true,\n          label: \"New Password\",\n          icon: \"lock\",\n          iconPosition: \"left\",\n          placeholder: \"Password\",\n          onChange: handleChange,\n          type: \"password\",\n          id: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          fluid: true,\n          label: \"Confirm New Password\",\n          icon: \"lock\",\n          iconPosition: \"left\",\n          placeholder: \"Confirm Password\",\n          onChange: handleChange,\n          type: \"password\",\n          id: \"confirmPassword\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Checkbox, {\n          readOnly: true,\n          label: \"Teacher\",\n          id: \"role\",\n          checked: currentUser.role == \"teacher\" ? true : false,\n          onChange: handleChangeTeacher\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"teal\",\n          fluid: true,\n          size: \"large\",\n          type: \"submit\",\n          children: isUpdateInProgress ? /*#__PURE__*/_jsxDEV(Dimmer, {\n            active: true,\n            children: /*#__PURE__*/_jsxDEV(Loader, {\n              size: \"mini\",\n              children: \"Loading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this) : \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"cEVDxCKZkM7pIxYTkpt1RYOhGkQ=\", false, function () {\n  return [useUserContext];\n});\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["D:/firebase-moodle/moodle/src/components/User/Profile.js"],"names":["React","useState","useEffect","Button","Form","Header","Image","Loader","Dimmer","Message","Segment","Check","Checkbox","Icon","Sidebar","AgoraLogo","useUserContext","updateEmail","ref","getDownloadURL","uploadBytesResumable","updateDoc","doc","db","storage","Profile","initialState","userName","email","address","birthdate","phoneNumber","password","confirmPassword","role","avatarUrl","avatar","initalChangeState","loading","setLoading","formState","setFormState","formChangeState","setChangeState","isUpdateInProgress","setUpdateInProgress","updateUserPassword","currentUser","isSuccess","setIsSuccess","passAndConfirmPass","setPassAndConfirmPass","passValid","setPassValid","getProfile","prev","phone","undefined","uname","console","log","err","handleUpdate","isTeacher","storageRef","topicSubject","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","state","error","code","then","downloadURL","userCollDoc","uid","userDoc","handleImageChange","ev","URL","createObjectURL","target","files","id","handleChange","value","handleChangeTeacher","checked","event"],"mappings":"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","sourcesContent":["\r\nimport React, { useState ,useEffect} from \"react\";\r\nimport {\r\n    Button,\r\n    Form,\r\n    Header,\r\n    Image,\r\n    Loader,\r\n    Dimmer,\r\n    Message,\r\n    Segment,\r\n    Check, \r\n    Checkbox,\r\n    Icon,\r\n  } from \"semantic-ui-react\";\r\n  import { Sidebar } from \"../Dashboard/Sidebar\";\r\nimport AgoraLogo from \"../../images/logo.png\";\r\nimport { useUserContext } from \"../../context/userContext\";\r\nimport { updateEmail } from \"firebase/auth\";\r\nimport { ref, getDownloadURL, uploadBytesResumable } from \"firebase/storage\";\r\nimport { updateDoc,  doc, } from \"firebase/firestore\";\r\nimport { db, storage } from \"../../firebase-config\";\r\n  export const Profile = () => {\r\n      \r\n    const initialState = {\r\n        userName: \"\",\r\n        email: \"\",\r\n        address:\"\",\r\n        birthdate:\"\",\r\n        phoneNumber:\"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        role: \"student\",\r\n        avatarUrl: 'https://react.semantic-ui.com/images/wireframe/image.png',\r\n        avatar:null,\r\n    };\r\n    const initalChangeState = {\r\n        userName: false,\r\n        email: false,\r\n        address:false,\r\n        birthdate:false,\r\n        phoneNumber:false,\r\n        password: false,\r\n        confirmPassword: false,\r\n        role: false,\r\n        avatarUrl: false,\r\n        avatar:false,\r\n    };\r\n    \r\n    const [loading, setLoading] = useState(false);\r\n    const [formState, setFormState] = useState(initialState);\r\n    const [formChangeState,setChangeState] = useState(initalChangeState);\r\n    const [isUpdateInProgress, setUpdateInProgress] = useState(false);\r\n    const { updateUserPassword,currentUser } = useUserContext();\r\n    const [isSuccess, setIsSuccess] = useState(false);\r\n    const [passAndConfirmPass, setPassAndConfirmPass] = useState(true);\r\n    const [passValid, setPassValid] = useState(true);\r\n    useEffect(() =>\r\n    {  \r\n        const getProfile = async ()  =>{\r\n            try {\r\n                setFormState((prev) => ({ ...prev, \r\n                    role: currentUser.role,\r\n                    email:currentUser.email,\r\n                    phoneNumber:currentUser.phone,\r\n                    address:currentUser.address,\r\n                    birthdate:currentUser.birthdate,\r\n                    avatarUrl: currentUser.avatar == undefined ? \"/images/uicon.png\" : currentUser.avatar,\r\n                    userName:currentUser.uname,\r\n                 }));      \r\n                 console.log(formState);\r\n            } catch (err) {\r\n              console.log(err);\r\n            }\r\n          }\r\n          getProfile();\r\n        //console.log(currentUser.role);\r\n    },[]);\r\n    const handleUpdate = async () =>\r\n    {\r\n        console.log(formState);\r\n        console.log(formChangeState);\r\n        console.log(formState.isTeacher);\r\n        \r\n        // if (\r\n        //   formState.userName == \"\"||\r\n        //   formState.email === \"\" ||\r\n        //   formState.phoneNumber == \"\"||\r\n        //   formState.password === \"\" ||\r\n        //   formState.confirmPassword === \"\" ||\r\n        //   formState.avatar === null\r\n        // )\r\n        // {\r\n        //     return;\r\n        // }\r\n         if (formState.confirmPassword !== formState.password) {\r\n           setPassAndConfirmPass(false);\r\n           return;\r\n         }\r\n    \r\n        // if (\r\n        //   !formState.password.match(\r\n        //     /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/g\r\n        //   )\r\n        // ) {\r\n        //   setPassValid(false);\r\n        //   return;\r\n        // }\r\n    \r\n        try {\r\n            setUpdateInProgress(true);\r\n          //if(formChangeState.email == true)\r\n          //const { user } = await updateUserPassword(formState.password);\r\n          if (formChangeState.avatar) {\r\n            const storageRef = ref(storage, `images/${formState.topicSubject}`);\r\n            const uploadTask = uploadBytesResumable(storageRef, formState.avatar);\r\n    \r\n            // Listen for state changes, errors, and completion of the upload.\r\n            uploadTask.on(\r\n              \"state_changed\",\r\n              (snapshot) => {\r\n                // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                const progress =\r\n                  (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                console.log(\"Upload is \" + progress + \"% done\");\r\n                switch (snapshot.state) {\r\n                  case \"paused\":\r\n                    console.log(\"Upload is paused\");\r\n                    break;\r\n                  case \"running\":\r\n                    console.log(\"Upload is running\");\r\n                    break;\r\n                }\r\n              },\r\n              (error) => {\r\n                // A full list of error codes is available at\r\n                // https://firebase.google.com/docs/storage/web/handle-errors\r\n                switch (error.code) {\r\n                  case \"storage/unauthorized\":\r\n                    // User doesn't have permission to access the object\r\n                    break;\r\n                  case \"storage/canceled\":\r\n                    // User canceled the upload\r\n                    break;\r\n    \r\n                  // ...\r\n    \r\n                  case \"storage/unknown\":\r\n                    // Unknown error occurred, inspect error.serverResponse\r\n                    break;\r\n                }\r\n              },\r\n              () => {\r\n                // Upload completed successfully, now we can get the download URL\r\n                getDownloadURL(uploadTask.snapshot.ref).then(\r\n                  async (downloadURL) => {\r\n                    const userCollDoc = doc(db, \"users\", currentUser.uid);\r\n                    await updateDoc(userCollDoc, {\r\n                      avatar: downloadURL,\r\n                    });\r\n                    setLoading(false);\r\n                  }\r\n                );\r\n              }\r\n            );\r\n          } \r\n          console.log(currentUser.uid);\r\n          const userDoc = doc(db,\"users\",currentUser.uid);\r\n          await updateDoc(userDoc,{\r\n            address:formState.address,\r\n            phone:formState.phoneNumber,\r\n            birthdate:formState.birthdate,\r\n          });\r\n          setUpdateInProgress(false);\r\n          setIsSuccess(true);\r\n        } catch(err) {\r\n          console.log(err);\r\n          setIsSuccess(false);\r\n          setUpdateInProgress(false);\r\n        }\r\n    \r\n    }\r\n    const handleImageChange = (ev) =>\r\n    {\r\n        console.log(\"AA\"+URL.createObjectURL(ev.target.files[0]));\r\n        setFormState((prev) => ({ ...prev, avatarUrl:URL.createObjectURL(ev.target.files[0]), [ev.target.id]: ev.target.files[0] }));  \r\n        setChangeState((prev) => ({...prev,avatarUrl:true , avatar:true}));\r\n    }\r\n    const handleChange = (ev) => {\r\n      setFormState((prev) => ({ ...prev, [ev.target.id]: ev.target.value }));\r\n      setChangeState((prev) => ({...prev, [ev.target.id]: true }));\r\n    };\r\n    const handleChangeTeacher = (ev) => {\r\n      setFormState((prev) => ({ ...prev, [ev.target.id]: ev.target.checked == 0 ? \"student\" : \"teacher\" }));\r\n    };\r\n    return(\r\n        <Sidebar>\r\n        {loading && (\r\n        <Dimmer active>\r\n          <Loader size=\"mini\">Submitting your question....</Loader>\r\n        </Dimmer>\r\n      )}\r\n      <Form size=\"large\" onSubmit={handleUpdate}>\r\n        <Segment stacked>\r\n            <Form.Input\r\n                label={\r\n                <Image label=\"UserFileImage\" src={formState.avatarUrl} size='medium' />}\r\n                \r\n                labelPostion=\"left\"\r\n                placeholder=\"\"\r\n                onChange={handleImageChange}\r\n                type=\"file\"\r\n                id=\"avatar\"\r\n                size=\"small\"\r\n            />\r\n\r\n          <Form.Input\r\n            fluid\r\n            label=\"UserName\"\r\n            icon=\"user\"\r\n            iconPosition=\"left\"\r\n            id=\"userName\"\r\n            onChange={handleChange}\r\n            defaultValue={formState.userName}\r\n          />\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input\r\n              fluid\r\n              label=\"Email Address\"\r\n              icon=\"mail\"\r\n              iconPosition=\"left\"\r\n              id=\"email\"\r\n              onChange={handleChange}\r\n              defaultValue={formState.email}\r\n            />\r\n            <Form.Input\r\n              fluid\r\n              label=\"Phone Number\"\r\n              icon=\"phone\"\r\n              iconPosition=\"left\"\r\n              type=\"tel\"\r\n              onChange={handleChange}\r\n              id=\"phoneNumber\"\r\n              defaultValue={formState.phoneNumber}\r\n              onKeyPress={(event) => {\r\n                //if (!/[0-9]/.test(event.key)) {\r\n                //  event.preventDefault();\r\n                //}\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group widths='equal'>\r\n            <Form.Input\r\n              fluid\r\n              label=\"Address\"\r\n              icon=\"address card\"\r\n              iconPosition=\"left\"\r\n              id=\"address\"\r\n              type=\"address\"\r\n              defaultValue={formState.address}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Input\r\n              fluid\r\n              label=\"DOB\"\r\n              icon=\"calendar\"\r\n              iconPosition=\"left\"\r\n              id=\"birthdate\"\r\n              type=\"date\"\r\n              defaultValue={formState.birthdate}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n          {/* <Form.Input\r\n            fluid\r\n            label=\"Old Password\"\r\n            icon=\"lock\"\r\n            iconPosition=\"left\"\r\n            placeholder=\"Password\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            id=\"oldPassword\"\r\n          /> */}\r\n          <Form.Input\r\n            fluid\r\n            label=\"New Password\"\r\n            icon=\"lock\"\r\n            iconPosition=\"left\"\r\n            placeholder=\"Password\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            id=\"password\"\r\n          />\r\n          <Form.Input\r\n            fluid\r\n            label=\"Confirm New Password\"\r\n            icon=\"lock\"\r\n            iconPosition=\"left\"\r\n            placeholder=\"Confirm Password\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n          />\r\n          <Form.Checkbox\r\n          readOnly\r\n          label = \"Teacher\"\r\n          id = \"role\"\r\n          checked={currentUser.role == \"teacher\" ? true : false}\r\n          onChange={handleChangeTeacher}\r\n          />\r\n          <Button color=\"teal\" fluid size=\"large\" type=\"submit\">\r\n            {isUpdateInProgress ? (\r\n              <Dimmer active>\r\n                <Loader size=\"mini\">Loading</Loader>\r\n              </Dimmer>\r\n            ) : (\r\n              \"Update\"\r\n            )}\r\n          </Button>\r\n        </Segment>\r\n      </Form>\r\n        </Sidebar>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}