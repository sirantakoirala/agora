{"ast":null,"code":"var _jsxFileName = \"D:\\\\firebase-moodle\\\\moodle\\\\src\\\\components\\\\Registration\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Form, Header, Image, Loader, Dimmer, Message, Segment } from \"semantic-ui-react\";\nimport AgoraLogo from \"../../images/logo.png\";\nimport { useUserContext } from \"../../context/userContext\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { db } from \"../../firebase-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\"\n};\n\nconst setUpUserRoleOnSignUp = async (userId, email) => {\n  const userCollRef = collection(db, \"users\");\n  await addDoc(userCollRef, {\n    role: \"student\",\n    uid: userId,\n    email: email\n  });\n};\n\nexport const SignUp = () => {\n  _s();\n\n  const [formState, setFormState] = useState(initialState);\n  const {\n    signUp,\n    currentUser\n  } = useUserContext();\n  const [passValid, setPassValid] = useState(true);\n  const [passAndConfirmPass, setPassAndConfirmPass] = useState(true);\n\n  const handleChange = ev => {\n    setFormState(prev => ({ ...prev,\n      [ev.target.id]: ev.target.value\n    }));\n  };\n\n  const [isSignUpInProgress, setIsSignUpInProgress] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  const handleSignUp = async ev => {\n    ev.preventDefault();\n\n    if (formState.email === \"\" || formState.password === \"\" || formState.confirmPassword === \"\") {\n      return;\n    }\n\n    if (formState.confirmPassword !== formState.password) {\n      setPassAndConfirmPass(false);\n      return;\n    }\n\n    if (!formState.password.match(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/g)) {\n      setPassValid(false);\n      return;\n    }\n\n    setIsSignUpInProgress(true);\n    const {\n      user\n    } = await signUp(formState.email, formState.password);\n    await setUpUserRoleOnSignUp(user.uid, formState.email);\n    setFormState(initialState);\n    setIsSignUpInProgress(false);\n    setIsSuccess(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!passAndConfirmPass && /*#__PURE__*/_jsxDEV(Message, {\n      success: true,\n      header: \"Your password dont match. Please try again!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), !passValid && /*#__PURE__*/_jsxDEV(Message, {\n      success: true,\n      header: \"Your password doesn't meet the requirement\",\n      content: \"It must contain 8 character, one uppercase, and a special character\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: AgoraLogo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), \"Agora\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), isSuccess && /*#__PURE__*/_jsxDEV(Message, {\n      success: true,\n      header: \"Your user registration was successful\",\n      content: \"You may now log-in with the username you have chosen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      size: \"large\",\n      onSubmit: handleSignUp,\n      children: /*#__PURE__*/_jsxDEV(Segment, {\n        stacked: true,\n        children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n          fluid: true,\n          icon: \"user\",\n          iconPosition: \"left\",\n          placeholder: \"E-mail address\",\n          id: \"email\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          fluid: true,\n          icon: \"lock\",\n          iconPosition: \"left\",\n          placeholder: \"Password\",\n          type: \"password\",\n          onChange: handleChange,\n          id: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          fluid: true,\n          icon: \"lock\",\n          iconPosition: \"left\",\n          placeholder: \"Confirm Password\",\n          onChange: handleChange,\n          type: \"password\",\n          id: \"confirmPassword\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"teal\",\n          fluid: true,\n          size: \"large\",\n          type: \"submit\",\n          children: isSignUpInProgress ? /*#__PURE__*/_jsxDEV(Dimmer, {\n            active: true,\n            children: /*#__PURE__*/_jsxDEV(Loader, {\n              size: \"mini\",\n              children: \"Loading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this) : \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SignUp, \"ruNdVHp1DvRMvhnQXtNY4j+HpAg=\", false, function () {\n  return [useUserContext];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/firebase-moodle/moodle/src/components/Registration/SignUp.js"],"names":["React","useState","Button","Form","Header","Image","Loader","Dimmer","Message","Segment","AgoraLogo","useUserContext","addDoc","collection","db","initialState","email","password","confirmPassword","setUpUserRoleOnSignUp","userId","userCollRef","role","uid","SignUp","formState","setFormState","signUp","currentUser","passValid","setPassValid","passAndConfirmPass","setPassAndConfirmPass","handleChange","ev","prev","target","id","value","isSignUpInProgress","setIsSignUpInProgress","isSuccess","setIsSuccess","handleSignUp","preventDefault","match","user"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Header,\r\n  Image,\r\n  Loader,\r\n  Dimmer,\r\n  Message,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport AgoraLogo from \"../../images/logo.png\";\r\nimport { useUserContext } from \"../../context/userContext\";\r\nimport { addDoc, collection } from \"firebase/firestore\";\r\nimport { db } from \"../../firebase-config\";\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\n\r\nconst setUpUserRoleOnSignUp = async (userId, email) => {\r\n  const userCollRef = collection(db, \"users\");\r\n\r\n  await addDoc(userCollRef, {\r\n    role: \"student\",\r\n    uid: userId,\r\n    email: email,\r\n  });\r\n};\r\n\r\nexport const SignUp = () => {\r\n  const [formState, setFormState] = useState(initialState);\r\n  const { signUp, currentUser } = useUserContext();\r\n  const [passValid, setPassValid] = useState(true);\r\n  const [passAndConfirmPass, setPassAndConfirmPass] = useState(true);\r\n  const handleChange = (ev) => {\r\n    setFormState((prev) => ({ ...prev, [ev.target.id]: ev.target.value }));\r\n  };\r\n  const [isSignUpInProgress, setIsSignUpInProgress] = useState(false);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n  const handleSignUp = async (ev) => {\r\n    ev.preventDefault();\r\n    if (\r\n      formState.email === \"\" ||\r\n      formState.password === \"\" ||\r\n      formState.confirmPassword === \"\"\r\n    ) {\r\n      return;\r\n    }\r\n    if (formState.confirmPassword !== formState.password) {\r\n      setPassAndConfirmPass(false);\r\n      return;\r\n    }\r\n\r\n    if (\r\n      !formState.password.match(\r\n        /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/g\r\n      )\r\n    ) {\r\n      setPassValid(false);\r\n      return;\r\n    }\r\n\r\n    setIsSignUpInProgress(true);\r\n    const { user } = await signUp(formState.email, formState.password);\r\n    await setUpUserRoleOnSignUp(user.uid, formState.email);\r\n    setFormState(initialState);\r\n    setIsSignUpInProgress(false);\r\n    setIsSuccess(true);\r\n  };\r\n  return (\r\n    <>\r\n      {!passAndConfirmPass && (\r\n        <Message success header=\"Your password dont match. Please try again!\" />\r\n      )}\r\n      {!passValid && (\r\n        <Message\r\n          success\r\n          header=\"Your password doesn't meet the requirement\"\r\n          content=\"It must contain 8 character, one uppercase, and a special character\"\r\n        />\r\n      )}\r\n      <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\r\n        <Image src={AgoraLogo} />\r\n        Agora\r\n      </Header>\r\n\r\n      {isSuccess && (\r\n        <Message\r\n          success\r\n          header=\"Your user registration was successful\"\r\n          content=\"You may now log-in with the username you have chosen\"\r\n        />\r\n      )}\r\n\r\n      <Form size=\"large\" onSubmit={handleSignUp}>\r\n        <Segment stacked>\r\n          <Form.Input\r\n            fluid\r\n            icon=\"user\"\r\n            iconPosition=\"left\"\r\n            placeholder=\"E-mail address\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n          <Form.Input\r\n            fluid\r\n            icon=\"lock\"\r\n            iconPosition=\"left\"\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            onChange={handleChange}\r\n            id=\"password\"\r\n          />\r\n          <Form.Input\r\n            fluid\r\n            icon=\"lock\"\r\n            iconPosition=\"left\"\r\n            placeholder=\"Confirm Password\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n          />\r\n\r\n          <Button color=\"teal\" fluid size=\"large\" type=\"submit\">\r\n            {isSignUpInProgress ? (\r\n              <Dimmer active>\r\n                <Loader size=\"mini\">Loading</Loader>\r\n              </Dimmer>\r\n            ) : (\r\n              \"Sign up\"\r\n            )}\r\n          </Button>\r\n        </Segment>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}