{"ast":null,"code":"var _jsxFileName = \"D:\\\\firebase-moodle\\\\moodle\\\\src\\\\components\\\\Quizzes\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport { useUserContext } from \"../../context/userContext\";\nimport { db } from \"../../firebase-config\";\nimport { useEffect, useState } from \"react\";\nimport { collection, query, getDocs, where } from \"firebase/firestore\";\nimport { Sidebar } from \"../Dashboard/Sidebar\";\nimport { useParams } from \"react-router-dom\";\nimport { Button, Card, Image, Form, Radio, Message } from \"semantic-ui-react\";\nimport QuizModal from \"../Dashboard/QuizModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Quiz = () => {\n  _s();\n\n  const {\n    subject\n  } = useParams();\n  const {\n    currentUser\n  } = useUserContext();\n  const isNotStudentRole = currentUser.role !== \"student\";\n  const [formState, setFormState] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  const [subjectQuizzes, setSubjectQuizzes] = useState([]);\n  useEffect(() => {\n    async function getSubjects() {\n      const q = query(collection(db, \"quizzes\"), where(\"subject\", \"==\", subject));\n      const querySnapshot = await getDocs(q);\n      const quizzes = querySnapshot.docs.map(doc => doc.data());\n      setSubjectQuizzes(quizzes);\n    }\n\n    getSubjects();\n  }, []);\n\n  const handleChange = quiz => (e, _ref) => {\n    let {\n      value\n    } = _ref;\n    setFormState({ ...formState,\n      [quiz.quizId]: value\n    });\n  };\n\n  const handleScore = ev => {\n    ev.preventDefault();\n    const score = subjectQuizzes.filter(quiz => formState[quiz.quizId] === quiz.correctAnswer).length;\n    setScore(score);\n    setSubmitted(true);\n  };\n\n  const options = [{\n    key: \"1\",\n    text: subject,\n    value: subject\n  }];\n\n  if (subjectQuizzes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Quiz - \", subject]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"20px 0\"\n        },\n        children: isNotStudentRole && /*#__PURE__*/_jsxDEV(QuizModal, {\n          subjectOptions: options,\n          currentUser: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        children: [/*#__PURE__*/_jsxDEV(Message.Header, {\n          children: \"No quizzes found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Currently no quizzes is available for this particular subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Sidebar, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Quiz - \", subject]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), submitted && /*#__PURE__*/_jsxDEV(Message, {\n      success: true,\n      header: \"Your current score is\",\n      content: `${score}/${subjectQuizzes.length}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"20px 0\"\n      },\n      children: isNotStudentRole && /*#__PURE__*/_jsxDEV(QuizModal, {\n        subjectOptions: options,\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleScore,\n      children: [subjectQuizzes.map(quiz => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: quiz.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Description, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n            extra: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              children: /*#__PURE__*/_jsxDEV(Radio, {\n                label: quiz.answer1,\n                name: quiz.quizId,\n                value: quiz.answer1,\n                onChange: handleChange(quiz)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: /*#__PURE__*/_jsxDEV(Radio, {\n                label: quiz.answer2,\n                name: quiz.quizId,\n                value: quiz.answer2,\n                onChange: handleChange(quiz)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: /*#__PURE__*/_jsxDEV(Radio, {\n                label: quiz.answer3,\n                name: quiz.quizId,\n                value: quiz.answer3,\n                onChange: handleChange(quiz)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: /*#__PURE__*/_jsxDEV(Radio, {\n                label: quiz.answer4,\n                name: quiz.quizId,\n                value: quiz.answer4,\n                onChange: (e, _ref2) => {\n                  let {\n                    value\n                  } = _ref2;\n                  return setFormState({ ...formState,\n                    [quiz.quizId]: value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, quiz.quizId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Quiz, \"IXb+GWoVDb7MFUhcmDqqNewqwao=\", false, function () {\n  return [useParams, useUserContext];\n});\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["D:/firebase-moodle/moodle/src/components/Quizzes/Quiz.js"],"names":["useUserContext","db","useEffect","useState","collection","query","getDocs","where","Sidebar","useParams","Button","Card","Image","Form","Radio","Message","QuizModal","Quiz","subject","currentUser","isNotStudentRole","role","formState","setFormState","submitted","setSubmitted","score","setScore","subjectQuizzes","setSubjectQuizzes","getSubjects","q","querySnapshot","quizzes","docs","map","doc","data","handleChange","quiz","e","value","quizId","handleScore","ev","preventDefault","filter","correctAnswer","length","options","key","text","padding","width","question","answer1","answer2","answer3","answer4"],"mappings":"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","sourcesContent":["import { useUserContext } from \"../../context/userContext\";\r\nimport { db } from \"../../firebase-config\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { collection, query, getDocs, where } from \"firebase/firestore\";\r\nimport { Sidebar } from \"../Dashboard/Sidebar\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Button, Card, Image, Form, Radio, Message } from \"semantic-ui-react\";\r\nimport QuizModal from \"../Dashboard/QuizModal\";\r\n\r\nexport const Quiz = () => {\r\n  const { subject } = useParams();\r\n  const { currentUser } = useUserContext();\r\n  const isNotStudentRole = currentUser.role !== \"student\";\r\n  const [formState, setFormState] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n\r\n  const [subjectQuizzes, setSubjectQuizzes] = useState([]);\r\n  useEffect(() => {\r\n    async function getSubjects() {\r\n      const q = query(\r\n        collection(db, \"quizzes\"),\r\n        where(\"subject\", \"==\", subject)\r\n      );\r\n\r\n      const querySnapshot = await getDocs(q);\r\n      const quizzes = querySnapshot.docs.map((doc) => doc.data());\r\n\r\n      setSubjectQuizzes(quizzes);\r\n    }\r\n    getSubjects();\r\n  }, []);\r\n  const handleChange =\r\n    (quiz) =>\r\n    (e, { value }) => {\r\n      setFormState({ ...formState, [quiz.quizId]: value });\r\n    };\r\n\r\n  const handleScore = (ev) => {\r\n    ev.preventDefault();\r\n    const score = subjectQuizzes.filter(\r\n      (quiz) => formState[quiz.quizId] === quiz.correctAnswer\r\n    ).length;\r\n    setScore(score);\r\n    setSubmitted(true);\r\n  };\r\n  const options = [{ key: \"1\", text: subject, value: subject }];\r\n  if (subjectQuizzes.length === 0) {\r\n    return (\r\n      <Sidebar>\r\n        <h1>Quiz - {subject}</h1>\r\n\r\n        <div style={{ padding: \"20px 0\" }}>\r\n          {isNotStudentRole && (\r\n            <QuizModal subjectOptions={options} currentUser={currentUser} />\r\n          )}\r\n        </div>\r\n        <Message>\r\n          <Message.Header>No quizzes found</Message.Header>\r\n          <p>Currently no quizzes is available for this particular subject</p>\r\n        </Message>\r\n      </Sidebar>\r\n    );\r\n  }\r\n  return (\r\n    <Sidebar>\r\n      <h1>Quiz - {subject}</h1>\r\n\r\n      {submitted && (\r\n        <Message\r\n          success\r\n          header=\"Your current score is\"\r\n          content={`${score}/${subjectQuizzes.length}`}\r\n        />\r\n      )}\r\n\r\n      <div style={{ padding: \"20px 0\" }}>\r\n        {isNotStudentRole && (\r\n          <QuizModal subjectOptions={options} currentUser={currentUser} />\r\n        )}\r\n      </div>\r\n\r\n      <Form onSubmit={handleScore}>\r\n        {subjectQuizzes.map((quiz) => {\r\n          return (\r\n            <Card style={{ width: \"100%\" }} key={quiz.quizId}>\r\n              <Card.Content>\r\n                <Card.Header>{quiz.question}</Card.Header>\r\n                <Card.Description></Card.Description>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Form.Field>\r\n                  <Radio\r\n                    label={quiz.answer1}\r\n                    name={quiz.quizId}\r\n                    value={quiz.answer1}\r\n                    onChange={handleChange(quiz)}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <Radio\r\n                    label={quiz.answer2}\r\n                    name={quiz.quizId}\r\n                    value={quiz.answer2}\r\n                    onChange={handleChange(quiz)}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <Radio\r\n                    label={quiz.answer3}\r\n                    name={quiz.quizId}\r\n                    value={quiz.answer3}\r\n                    onChange={handleChange(quiz)}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <Radio\r\n                    label={quiz.answer4}\r\n                    name={quiz.quizId}\r\n                    value={quiz.answer4}\r\n                    onChange={(e, { value }) =>\r\n                      setFormState({ ...formState, [quiz.quizId]: value })\r\n                    }\r\n                  />\r\n                </Form.Field>\r\n              </Card.Content>\r\n            </Card>\r\n          );\r\n        })}\r\n        <Button primary type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </Sidebar>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}