{"ast":null,"code":"var _jsxFileName = \"E:\\\\Uni\\\\Project\\\\qna_forum\\\\Agora v1.0.2\\\\src\\\\components\\\\Quizzes\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport { useUserContext } from \"../../context/userContext\";\nimport { db } from \"../../firebase-config\";\nimport { useEffect, useState } from \"react\";\nimport { collection, query, getDocs, where, doc, updateDoc, arrayUnion } from \"firebase/firestore\";\nimport { Sidebar } from \"../Dashboard/Sidebar\";\nimport { useParams } from \"react-router-dom\";\nimport { Menu, Button, Card, Image, Form, Radio, Message } from \"semantic-ui-react\";\nimport QuizModal from \"../Dashboard/QuizModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Quiz = () => {\n  _s();\n\n  const {\n    subject\n  } = useParams();\n  const {\n    currentUser\n  } = useUserContext();\n  const isNotStudentRole = currentUser.role !== \"student\";\n  const [formState, setFormState] = useState([]);\n  const [submitted, setSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  console.log(formState);\n  const [subjectQuizzes, setSubjectQuizzes] = useState([]);\n  useEffect(() => {\n    async function getSubjects() {\n      const q = query(collection(db, \"quizzes\"), where(\"subject\", \"==\", subject));\n      const querySnapshot = await getDocs(q);\n      const quizzes = querySnapshot.docs.map(doc => doc.data());\n      setSubjectQuizzes(quizzes);\n    }\n\n    getSubjects();\n  }, []);\n\n  const handleChange = (e, _ref) => {\n    let {\n      value\n    } = _ref;\n    //    console.log(name);\n    console.log(value + \"A\" + e.target.outerText);\n    formState[value] = e.target.outerText;\n    console.log(formState);\n    setFormState(arr => [...formState]);\n  };\n\n  const handleScore = ev => {\n    ev.preventDefault();\n    console.log(subjectQuizzes);\n    const score = subjectQuizzes.filter((quiz, index) => formState[index] === quiz.correctAnswer).length;\n    setScore(score);\n    setSubmitted(true);\n    console.log(score);\n    const userDoc = doc(db, \"users\", currentUser.uid);\n    const current = new Date();\n    const curdate = `${current.getDate()}/${current.getMonth() + 1}/${current.getFullYear()} ${current.getHours()}:${current.getMinutes()}:${current.getSeconds()}`;\n    updateDoc(userDoc, {\n      history: arrayUnion(\"Quiz^Test^\" + curdate + \"^\" + \"Score:\" + score + \"/\" + Object.keys(subjectQuizzes).length)\n    });\n  };\n\n  const options = [{\n    key: \"1\",\n    text: subject,\n    value: subject\n  }];\n\n  if (subjectQuizzes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Subject: \", subject]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), submitted && /*#__PURE__*/_jsxDEV(Message, {\n        success: true,\n        header: \"Your current score is\",\n        content: `${score}/${subjectQuizzes.length}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        style: {\n          padding: \"20px 0\"\n        },\n        children: isNotStudentRole && /*#__PURE__*/_jsxDEV(QuizModal, {\n          subjectOptions: options,\n          currentUser: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        children: [/*#__PURE__*/_jsxDEV(Message.Header, {\n          children: \"No quizzes found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Currently no quizzes is available for this particular subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Sidebar, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Quiz - \", subject]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), submitted && /*#__PURE__*/_jsxDEV(Message, {\n      success: true,\n      header: \"Your current score is\",\n      content: `${score}/${subjectQuizzes.length}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      style: {\n        padding: \"20px 0\"\n      },\n      children: isNotStudentRole && /*#__PURE__*/_jsxDEV(QuizModal, {\n        subjectOptions: options,\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), subjectQuizzes.map((quiz, index) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: quiz.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Description, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          extra: true,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              children: /*#__PURE__*/_jsxDEV(Radio, {\n                label: quiz.answer1,\n                name: index,\n                value: index,\n                onChange: handleChange,\n                checked: formState[index] === quiz.answer1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: /*#__PURE__*/_jsxDEV(Radio, {\n                label: quiz.answer2,\n                name: index,\n                value: index,\n                onChange: handleChange,\n                checked: formState[index] === quiz.answer2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: /*#__PURE__*/_jsxDEV(Radio, {\n                label: quiz.answer3,\n                name: index,\n                value: index,\n                onChange: handleChange,\n                checked: formState[index] === quiz.answer3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: /*#__PURE__*/_jsxDEV(Radio, {\n                label: quiz.answer4,\n                name: index,\n                value: index,\n                onChange: handleChange,\n                checked: formState[index] === quiz.answer4\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this)]\n      }, quiz.quizId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"violet\",\n      onClick: handleScore,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Quiz, \"fag+xJsswMXvAITxyfiScqQmrqk=\", false, function () {\n  return [useParams, useUserContext];\n});\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["E:/Uni/Project/qna_forum/Agora v1.0.2/src/components/Quizzes/Quiz.js"],"names":["useUserContext","db","useEffect","useState","collection","query","getDocs","where","doc","updateDoc","arrayUnion","Sidebar","useParams","Menu","Button","Card","Image","Form","Radio","Message","QuizModal","Quiz","subject","currentUser","isNotStudentRole","role","formState","setFormState","submitted","setSubmitted","score","setScore","console","log","subjectQuizzes","setSubjectQuizzes","getSubjects","q","querySnapshot","quizzes","docs","map","data","handleChange","e","value","target","outerText","arr","handleScore","ev","preventDefault","filter","quiz","index","correctAnswer","length","userDoc","uid","current","Date","curdate","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","history","Object","keys","options","key","text","padding","width","question","answer1","answer2","answer3","answer4","quizId"],"mappings":"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","sourcesContent":["import { useUserContext } from \"../../context/userContext\";\r\nimport { db } from \"../../firebase-config\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { collection, query, getDocs, where,doc,updateDoc,arrayUnion} from \"firebase/firestore\";\r\nimport { Sidebar } from \"../Dashboard/Sidebar\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Menu,Button, Card, Image, Form, Radio, Message } from \"semantic-ui-react\";\r\nimport QuizModal from \"../Dashboard/QuizModal\";\r\n\r\nexport const Quiz = () => {\r\n  const { subject } = useParams();\r\n  const { currentUser } = useUserContext();\r\n  const isNotStudentRole = currentUser.role !== \"student\";\r\n  const [formState, setFormState] = useState([]);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  console.log(formState);\r\n\r\n  const [subjectQuizzes, setSubjectQuizzes] = useState([]);\r\n  useEffect(() => {\r\n    async function getSubjects() {\r\n      const q = query(\r\n        collection(db, \"quizzes\"),\r\n        where(\"subject\", \"==\", subject)\r\n      );\r\n\r\n      const querySnapshot = await getDocs(q);\r\n      const quizzes = querySnapshot.docs.map((doc) => doc.data());\r\n\r\n      setSubjectQuizzes(quizzes);\r\n    }\r\n    getSubjects();\r\n  }, []);\r\n  const handleChange = (e,{value}) => {\r\n//    console.log(name);\r\n    console.log(value +\"A\" + e.target.outerText);\r\n    formState[value]=e.target.outerText;\r\n    console.log(formState);\r\n    setFormState(arr=>[...formState]);\r\n  };\r\n\r\n  const handleScore = (ev) => {\r\n    ev.preventDefault();\r\n    console.log(subjectQuizzes);\r\n    const score = subjectQuizzes.filter(\r\n      (quiz,index) => formState[index] === quiz.correctAnswer\r\n    ).length;\r\n    setScore(score);\r\n    setSubmitted(true);\r\n    console.log(score);\r\n    const userDoc = doc(db, \"users\", currentUser.uid);\r\n    const current = new Date();\r\n    const curdate = `${current.getDate()}/${current.getMonth()+1}/${current.getFullYear()} ${current.getHours()}:${current.getMinutes()}:${current.getSeconds()}`;\r\n    updateDoc(userDoc,\r\n      {\r\n        history: arrayUnion(\"Quiz^Test^\"+curdate+\"^\"+\"Score:\"+score+\"/\"+Object.keys(subjectQuizzes).length),\r\n      });\r\n  };\r\n  const options = [{ key: \"1\", text: subject, value: subject }];\r\n  if (subjectQuizzes.length === 0) {\r\n    return (\r\n      <Sidebar>\r\n        <h1>Subject: {subject}</h1>\r\n\r\n        {submitted && (\r\n            <Message\r\n                success\r\n                header=\"Your current score is\"\r\n                content={`${score}/${subjectQuizzes.length}`}\r\n            />\r\n        )}\r\n\r\n        <Menu style={{ padding: \"20px 0\" }}>\r\n            {isNotStudentRole && (\r\n                <QuizModal subjectOptions={options} currentUser={currentUser} />\r\n            )}\r\n        </Menu>\r\n\r\n        <Message>\r\n          <Message.Header>No quizzes found</Message.Header>\r\n          <p>Currently no quizzes is available for this particular subject</p>\r\n        </Message>\r\n      </Sidebar>\r\n    );\r\n  }\r\n  return (\r\n    <Sidebar>\r\n      <h1>Quiz - {subject}</h1>\r\n\r\n      {submitted && (\r\n        <Message\r\n          success\r\n          header=\"Your current score is\"\r\n          content={`${score}/${subjectQuizzes.length}`}\r\n        />\r\n      )}\r\n\r\n      <Menu style={{ padding: \"20px 0\" }}>\r\n        {isNotStudentRole && (\r\n          <QuizModal subjectOptions={options} currentUser={currentUser} />\r\n        )}\r\n      </Menu>\r\n\r\n        {subjectQuizzes.map((quiz, index) => {\r\n          return (\r\n            \r\n            <Card style={{ width: \"100%\" }} key={quiz.quizId}>\r\n              <Card.Content>\r\n                <Card.Header>{quiz.question}</Card.Header>\r\n                <Card.Description></Card.Description>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n              <Form >\r\n                <Form.Field>\r\n                  <Radio\r\n                    label={quiz.answer1}\r\n                    name={index}\r\n                    value={index}\r\n                    onChange={handleChange}\r\n                    checked={formState[index] === quiz.answer1}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <Radio\r\n                      label={quiz.answer2}\r\n                      name={index}\r\n                      value={index}\r\n                      onChange={handleChange}\r\n                      checked={formState[index] === quiz.answer2}\r\n                    />\r\n\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <Radio\r\n                    label={quiz.answer3}\r\n                    name={index}\r\n                    value={index}\r\n                    onChange={handleChange}\r\n                    checked={formState[index] === quiz.answer3}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <Radio\r\n                    label={quiz.answer4}\r\n                    name={index}\r\n                    value={index}\r\n                    onChange={handleChange}\r\n                    checked={formState[index] === quiz.answer4}\r\n                  />\r\n                </Form.Field>\r\n            </Form>\r\n              </Card.Content>\r\n            </Card>\r\n\r\n          );\r\n        })}\r\n        <Button color=\"violet\" onClick={handleScore}>\r\n          Submit\r\n        </Button>\r\n    </Sidebar>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}