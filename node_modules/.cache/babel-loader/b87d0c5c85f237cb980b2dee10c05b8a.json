{"ast":null,"code":"var _jsxFileName = \"D:\\\\firebase-moodle\\\\moodle\\\\src\\\\components\\\\Dashboard\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { QuestionModal } from \"./QuestionModal\";\nimport { SubjectModal } from \"./SubjectModal\";\nimport \"../components/IconButton.css\";\nimport { Message, Card, Icon, Grid, Button, Label, Menu, Image, Container } from \"semantic-ui-react\";\nimport { Sidebar } from \"./Sidebar\";\nimport { collection, query, onSnapshot, orderBy, getDocs, updateDoc, arrayUnion, where, doc } from \"firebase/firestore\";\nimport { db } from \"../../firebase-config\";\nimport { Link } from \"react-router-dom\";\nimport { useUserContext } from \"../../context/userContext\";\nimport QuizModal from \"./QuizModal\";\nimport { signOut } from \"firebase/auth\";\nimport { auth } from \"../../firebase-config\";\nimport { findByLabelText } from \"@testing-library/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst menuStyle = {\n  border: 'none',\n  borderRadius: 0,\n  boxShadow: 'none',\n  marginBottom: '1em',\n  marginTop: '0em',\n  display: 'flex',\n  transition: 'box-shadow 0.5s ease, padding 0.5s ease'\n};\n\nconst Dashboard = () => {\n  _s();\n\n  const [topics, setTopics] = useState([]);\n  const {\n    currentUser\n  } = useUserContext();\n  const [subjectOptions, setSubjectOptions] = useState([]);\n  const isNotStudentRole = currentUser.role !== \"student\";\n  const isNotAccpeted = currentUser.approval === \"No\";\n  useEffect(() => {\n    if (isNotAccpeted == true && isNotStudentRole == true) {\n      alert(\"Please wait Administrator's Approval\");\n      signOut(auth);\n    }\n\n    async function getTopics() {\n      try {\n        const q = query(collection(db, \"topics\"), orderBy(\"createdAt\", \"desc\"));\n        const unsub = await onSnapshot(q, querySnapshot => {\n          const topics = querySnapshot.docs.map(topic => topic.data());\n          setTopics(topics);\n          {\n            topics.map(topic => {\n              if (topic.likeId != null) topic.likeIdCount = Object.keys(topic.likeId).length;else topic.likeIdCount = 0;\n              if (topic.dislikeId != null) topic.dislikeIdCount = Object.keys(topic.dislikeId).length;else topic.dislikeIdCount = 0;\n            });\n          }\n        });\n        return unsub;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    return getTopics();\n  }, []);\n  useEffect(() => {\n    async function getSubjects() {\n      const q = query(collection(db, \"subject\"));\n      const querySnapshot = await getDocs(q);\n      const subjects = querySnapshot.docs.map((doc, id) => ({\n        value: doc.data().title,\n        key: id,\n        text: doc.data().title\n      }));\n      setSubjectOptions(subjects);\n    }\n\n    getSubjects();\n  }, []);\n\n  const handleLikeClick = async (ev, tid) => {\n    ev.preventDefault();\n    {\n      topics.map(async topic => {\n        if (topic.topicId == tid) {\n          if (topic.likeId.includes(currentUser.uid) == false && topic.dislikeId.includes(currentUser.uid) == false) {\n            const topicDoc = doc(db, \"topics\", tid);\n            await updateDoc(topicDoc, {\n              likeId: arrayUnion(currentUser.uid)\n            });\n            topic.likeIdCount++;\n            topic.likeId.push(currentUser.uid);\n            setTopics(arr => [...topics]);\n          }\n        }\n      });\n    }\n  };\n\n  const handledisLikeClick = async (ev, tid) => {\n    ev.preventDefault(); // if(currentUser.role != \"teacher\") return ;\n\n    {\n      topics.map(async topic => {\n        if (topic.topicId == tid) {\n          if (topic.likeId.includes(currentUser.uid) == false && topic.dislikeId.includes(currentUser.uid) == false) {\n            const topicDoc = doc(db, \"topics\", tid);\n            await updateDoc(topicDoc, {\n              dislikeId: arrayUnion(currentUser.uid)\n            });\n            topic.dislikeIdCount++;\n            setTopics(arr => [...topics]);\n          }\n        }\n      });\n    }\n  };\n\n  const checkIsTeacher = () => {\n    if (currentUser.role === \"teacher\") {\n      return false;\n    } else return true;\n  };\n\n  const setIconColor = (likeId, uId) => {\n    if (likeId != null && likeId.includes(uId) == true) return \"green\";\n    return \"black\";\n  };\n\n  const setUserIconColor = user => {\n    if (currentUser.displayname == user) return \"red\";\n    return \"black\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [\"Dash Board\", /*#__PURE__*/_jsxDEV(Menu, {\n          borderless: true,\n          style: menuStyle,\n          children: [isNotStudentRole && /*#__PURE__*/_jsxDEV(QuizModal, {\n            subjectOptions: subjectOptions,\n            currentUser: currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 11\n          }, this), isNotStudentRole && /*#__PURE__*/_jsxDEV(SubjectModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(QuestionModal, {\n            subjectOptions: subjectOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            textAlign: 'center',\n            marginTop: '1em'\n          },\n          children: \"Current Topics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          columns: \"one\",\n          children: topics.map(topic => {\n            return /*#__PURE__*/_jsxDEV(Grid.Column, {\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                as: Link,\n                style: {\n                  width: \"100%\"\n                },\n                to: `/topic/${topic.topicId}`,\n                header: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: [topic.topicTitle, topic.haspinned == true && /*#__PURE__*/_jsxDEV(Icon, {\n                      name: \"check\",\n                      color: \"green\",\n                      style: {\n                        display: 'flex',\n                        float: 'right'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false),\n                meta: topic.topicSubject,\n                description: topic.topicDescription,\n                extra: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Icon, {\n                      color: setUserIconColor(topic.user),\n                      name: \"user\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 23\n                    }, this), topic.user]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      onClick: e => handleLikeClick(e, topic.topicId),\n                      children: [/*#__PURE__*/_jsxDEV(Icon, {\n                        color: setIconColor(topic.likeId, currentUser.uid),\n                        name: \"thumbs up\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 213,\n                        columnNumber: 25\n                      }, this), topic.likeIdCount]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: e => handledisLikeClick(e, topic.topicId),\n                      children: [/*#__PURE__*/_jsxDEV(Icon, {\n                        color: setIconColor(topic.dislikeId, currentUser.uid),\n                        name: \"thumbs down\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 25\n                      }, this), topic.dislikeIdCount]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      children: [/*#__PURE__*/_jsxDEV(Icon, {\n                        color: \"black\",\n                        name: \"comment\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 222,\n                        columnNumber: 25\n                      }, this), topic.comment]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)\n            }, topic.topicId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Dashboard, \"L73tPgVdIpRg4Hnk5BwerAoh7kc=\", false, function () {\n  return [useUserContext];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["D:/firebase-moodle/moodle/src/components/Dashboard/Dashboard.js"],"names":["React","useEffect","useState","QuestionModal","SubjectModal","Message","Card","Icon","Grid","Button","Label","Menu","Image","Container","Sidebar","collection","query","onSnapshot","orderBy","getDocs","updateDoc","arrayUnion","where","doc","db","Link","useUserContext","QuizModal","signOut","auth","findByLabelText","menuStyle","border","borderRadius","boxShadow","marginBottom","marginTop","display","transition","Dashboard","topics","setTopics","currentUser","subjectOptions","setSubjectOptions","isNotStudentRole","role","isNotAccpeted","approval","alert","getTopics","q","unsub","querySnapshot","docs","map","topic","data","likeId","likeIdCount","Object","keys","length","dislikeId","dislikeIdCount","err","console","log","getSubjects","subjects","id","value","title","key","text","handleLikeClick","ev","tid","preventDefault","topicId","includes","uid","topicDoc","push","arr","handledisLikeClick","checkIsTeacher","setIconColor","uId","setUserIconColor","user","displayname","textAlign","width","topicTitle","haspinned","float","topicSubject","topicDescription","e","comment"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { QuestionModal } from \"./QuestionModal\";\r\nimport { SubjectModal } from \"./SubjectModal\";\r\nimport \"../components/IconButton.css\";\r\n\r\nimport { \r\n  Message,\r\n  Card,\r\n  Icon,\r\n  Grid,\r\n  Button,\r\n  Label,\r\n  Menu,\r\n  Image,\r\n  Container } from \"semantic-ui-react\";\r\nimport { Sidebar } from \"./Sidebar\";\r\n\r\nimport {\r\n  collection,\r\n  query,\r\n  onSnapshot,\r\n  orderBy,\r\n  getDocs,\r\n  updateDoc,\r\n  arrayUnion,\r\n  where,\r\n  doc,\r\n} from \"firebase/firestore\";\r\n\r\nimport { db } from \"../../firebase-config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useUserContext } from \"../../context/userContext\";\r\nimport QuizModal from \"./QuizModal\";\r\nimport {signOut} from \"firebase/auth\"\r\nimport {auth} from \"../../firebase-config\"\r\nimport { findByLabelText } from \"@testing-library/react\";\r\n\r\nconst menuStyle = {\r\n  border: 'none',\r\n  borderRadius: 0,\r\n  boxShadow: 'none',\r\n  marginBottom: '1em',\r\n  marginTop: '0em',\r\n  display:'flex',\r\n  transition: 'box-shadow 0.5s ease, padding 0.5s ease',\r\n}\r\nconst Dashboard = () => {\r\n  const [topics, setTopics] = useState([]);\r\n  const { currentUser } = useUserContext();\r\n  const [subjectOptions, setSubjectOptions] = useState([]);\r\n  const isNotStudentRole = currentUser.role !== \"student\";\r\n  const isNotAccpeted = currentUser.approval === \"No\";\r\n  useEffect(() => {\r\n    if (isNotAccpeted == true && isNotStudentRole == true)\r\n    {\r\n      alert(\"Please wait Administrator's Approval\");\r\n      signOut(auth);\r\n    }\r\n    async function getTopics() {\r\n      try {\r\n        const q = query(collection(db, \"topics\"), orderBy(\"createdAt\", \"desc\"));\r\n\r\n        const unsub = await onSnapshot(q, (querySnapshot) => {\r\n          const topics = querySnapshot.docs.map((topic) => topic.data());\r\n          setTopics(topics);\r\n          {topics.map((topic) => {\r\n            if(topic.likeId != null)\r\n              topic.likeIdCount = Object.keys(topic.likeId).length;\r\n              else topic.likeIdCount = 0;\r\n            if(topic.dislikeId != null)\r\n                topic.dislikeIdCount = Object.keys(topic.dislikeId).length;\r\n                else topic.dislikeIdCount = 0;\r\n          })}\r\n                \r\n        });\r\n\r\n        return unsub;\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    return getTopics();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    \r\n    async function getSubjects() {\r\n      const q = query(collection(db, \"subject\"));\r\n\r\n      const querySnapshot = await getDocs(q);\r\n      const subjects = querySnapshot.docs.map((doc, id) => ({\r\n        value: doc.data().title,\r\n        key: id,\r\n        text: doc.data().title,\r\n      }));\r\n      setSubjectOptions(subjects);\r\n    }\r\n    getSubjects();\r\n  }, []);\r\n  \r\n  const handleLikeClick = async (ev,tid) =>\r\n   {\r\n    ev.preventDefault();\r\n    {topics.map(async (topic) => {\r\n     if(topic.topicId == tid)\r\n     {\r\n       if(topic.likeId.includes(currentUser.uid) == false &&\r\n       topic.dislikeId.includes(currentUser.uid) == false)\r\n      {\r\n        const topicDoc = doc(db,\"topics\",tid);\r\n        await  updateDoc(topicDoc,{\r\n            likeId: arrayUnion(currentUser.uid),\r\n          })\r\n        topic.likeIdCount++;\r\n        topic.likeId.push(currentUser.uid);\r\n        setTopics(arr=>[...topics]);\r\n      }\r\n     }\r\n    })}\r\n   }\r\n   const handledisLikeClick = async (ev,tid) =>\r\n   {\r\n    ev.preventDefault();\r\n    \r\n    // if(currentUser.role != \"teacher\") return ;\r\n    {topics.map(async (topic) => {\r\n     if(topic.topicId == tid)\r\n     {\r\n       if(topic.likeId.includes(currentUser.uid) == false &&\r\n       topic.dislikeId.includes(currentUser.uid) == false)\r\n       {\r\n        const topicDoc = doc(db,\"topics\",tid);\r\n        await  updateDoc(topicDoc,{\r\n            dislikeId: arrayUnion(currentUser.uid),\r\n          })\r\n        topic.dislikeIdCount++;\r\n        setTopics(arr=>[...topics]);\r\n        }\r\n     }\r\n    })}\r\n   }\r\n   const checkIsTeacher = () =>\r\n   {\r\n     if(currentUser.role === \"teacher\")\r\n     {\r\n      return false;\r\n     }\r\n     else return true;\r\n   }\r\n   const setIconColor = (likeId, uId) =>\r\n   {\r\n     if(likeId != null && likeId.includes(uId) == true)\r\n       return \"green\";\r\n    return \"black\";\r\n   }\r\n   const setUserIconColor = (user) =>\r\n   {\r\n     if(currentUser.displayname == user)\r\n      return \"red\";\r\n     return \"black\";\r\n   }\r\n  return (\r\n    <>\r\n    \r\n    <Sidebar>\r\n      <h1 style={{textAlign:'center'}}>\r\n       Dash Board\r\n       <Menu\r\n      borderless\r\n      style={menuStyle}\r\n      >\r\n          {isNotStudentRole && (\r\n          <QuizModal subjectOptions={subjectOptions} currentUser={currentUser}/>\r\n        )}\r\n        {isNotStudentRole && <SubjectModal />}\r\n          <QuestionModal subjectOptions={subjectOptions} />\r\n\r\n      </Menu>\r\n\r\n       </h1>\r\n      \r\n      \r\n      \r\n      <div>\r\n        <h1 style={{textAlign:'center',marginTop:'1em'}}>Current Topics</h1>\r\n        <Grid columns=\"one\">\r\n          {topics.map((topic) => {\r\n            return (\r\n              <Grid.Column key={topic.topicId}>\r\n\r\n                <Card\r\n                  as={Link}\r\n                  style={{ width: \"100%\" }}\r\n                  to={`/topic/${topic.topicId}`}\r\n                  header={<>\r\n                  <h2>{topic.topicTitle}\r\n                  { topic.haspinned==true && \r\n                    <Icon name='check' color='green' style={{display:'flex',float:'right'}}/>\r\n                   }\r\n                  </h2>\r\n                  \r\n                  </>}\r\n                  meta={topic.topicSubject}\r\n                  description={topic.topicDescription}    \r\n                  extra={\r\n                    <div >\r\n                      <div>\r\n                      <Icon color={setUserIconColor(topic.user)} name=\"user\" />\r\n                      {topic.user}\r\n                      </div>\r\n                      <div>\r\n                        <Button  onClick={(e) => handleLikeClick(e,topic.topicId)}>\r\n                        <Icon color={setIconColor(topic.likeId,currentUser.uid)} name='thumbs up' />\r\n                        {topic.likeIdCount}\r\n                        </Button>\r\n                        <Button  onClick={(e) => handledisLikeClick(e,topic.topicId)}>\r\n                        <Icon color={setIconColor(topic.dislikeId,currentUser.uid)} name='thumbs down' />\r\n                        {topic.dislikeIdCount}\r\n\r\n                        </Button>\r\n                        <Button>\r\n                        <Icon color=\"black\" name='comment' />\r\n                        {topic.comment}\r\n                        </Button>\r\n                    </div>\r\n                      \r\n                    </div>\r\n                  }\r\n                />\r\n              </Grid.Column>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </div>\r\n    </Sidebar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}