{"ast":null,"code":"var _jsxFileName = \"E:\\\\Uni\\\\Project\\\\qna_forum\\\\Agora v1.0.2\\\\src\\\\components\\\\Topic\\\\Topic.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { PostModal } from \"../Dashboard/PostModal\";\nimport { useParams } from \"react-router-dom\";\nimport { Sidebar } from \"../Dashboard/Sidebar\";\nimport { Button, Checkbox, Form, Card, Icon, Label, Image, TextArea, Container, Rail, Divider, Segment, Header } from \"semantic-ui-react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { collection, query, where, getDocs, addDoc, deleteDoc, serverTimestamp, onSnapshot, orderBy, setDoc, doc, updateDoc, arrayUnion } from \"firebase/firestore\";\nimport { useUserContext } from \"../../context/userContext\";\nimport { db } from \"../../firebase-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Topic = () => {\n  _s();\n\n  const {\n    topicId\n  } = useParams();\n  const {\n    currentUser\n  } = useUserContext();\n  const [posts, setPosts] = useState([]);\n  const [formState, setFormState] = useState(\"\");\n  const [topic, setTopic] = useState({});\n  useEffect(() => {\n    async function getTopic() {\n      try {\n        const q = query(collection(db, \"topics\"), where(\"topicId\", \"==\", topicId));\n        const querySnapshot = await getDocs(q);\n        const [topic] = querySnapshot.docs.map(post => post.data());\n        console.log(\"Des\" + topic.topicDescription);\n        if (topic.likeId != null) topic.likeIdCount = Object.keys(topic.likeId).length;else topic.likeIdCount = 0;\n        if (topic.dislikeId != null) topic.dislikeIdCount = Object.keys(topic.dislikeId).length;else topic.dislikeIdCount = 0;\n        if (topic.haspinned == null) topic.haspinned = false;\n        setTopic(topic);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    getTopic();\n  }, []);\n  useEffect(() => {\n    async function getPosts() {\n      try {\n        const q = query(collection(db, \"posts\"), where(\"topicId\", \"==\", topicId));\n        console.log(\"getPosts\");\n        const unsub = await onSnapshot(q, querySnapshot => {\n          const posts = querySnapshot.docs.map(post => post.data()) //.sort( ( a, b ) => ( b.createdAt - a.createdAt ) );\n          .sort(function (a, b) {\n            var ap, bp;\n            if (a.likeId != null) ap = Object.keys(a.likeId).length;\n            if (b.likeId != null) bp = Object.keys(b.likeId).length;\n            return b.pinned - a.pinned || bp - ap || b.createdAt - a.createdAt;\n          });\n          {\n            posts.map((post, index) => {\n              //            console.log(post.createdAt + (post.pinned == true ? 1000000000000: 0 ));\n              if (post.likeId != null) post.likeIdCount = Object.keys(post.likeId).length;else post.likeIdCount = 0;\n              if (post.dislikeId != null) post.dislikeIdCount = Object.keys(post.dislikeId).length;else post.dislikeIdCount = 0;\n            });\n          }\n          setPosts(posts);\n        });\n        return unsub;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    return getPosts();\n  }, []);\n\n  const handleLikeClick = async (ev, parent) => {\n    ev.preventDefault();\n    if (currentUser.role != \"teacher\") return; //       if(parent)\n\n    console.log(currentUser.role);\n\n    if (parent.likeId.includes(currentUser.uid) == false && parent.dislikeId.includes(currentUser.uid) == false) {\n      var parentDoc;\n      if (parent === topic) parentDoc = doc(db, \"topics\", parent.topicId);else parentDoc = doc(db, \"posts\", parent.postId);\n      await updateDoc(parentDoc, {\n        likeId: arrayUnion(currentUser.uid)\n      });\n      parent.likeIdCount++;\n      parent.likeId.push(currentUser.uid); //setTopic(arr=>[...topics]);\n    }\n  };\n\n  const handledisLikeClick = async (ev, parent) => {\n    ev.preventDefault();\n    console.log(currentUser.role);\n\n    if (parent.likeId.includes(currentUser.uid) == false && parent.dislikeId.includes(currentUser.uid) == false) {\n      var parentDoc;\n      if (parent === topic) parentDoc = doc(db, \"topics\", parent.topicId);else parentDoc = doc(db, \"posts\", parent.postId);\n      await updateDoc(parentDoc, {\n        dislikeId: arrayUnion(currentUser.uid)\n      });\n      parent.dislikeIdCount++;\n      parent.dislikeId.push(currentUser.uid); //setTopic(arr=>[...topics]);\n    }\n  };\n\n  const handlePin = async (ev, post) => {\n    console.log(\"BBBBB\");\n    const postDoc = doc(db, \"posts\", post.postId);\n    await updateDoc(postDoc, {\n      pinned: true\n    });\n    post.pinned = true;\n    const topicDoc = doc(db, \"topics\", topic.topicId);\n    await updateDoc(topicDoc, {\n      haspinned: true\n    });\n    topic.haspinned = true;\n    setTopic(topic);\n    setPosts(arr => [...posts]);\n  };\n\n  const handleUnPin = async (ev, post) => {\n    console.log(\"BBBBB\");\n    const postDoc = doc(db, \"posts\", post.postId);\n    await updateDoc(postDoc, {\n      pinned: false\n    });\n    post.pinned = false;\n    const topicDoc = doc(db, \"topics\", topic.topicId);\n    await updateDoc(topicDoc, {\n      haspinned: false\n    });\n    topic.haspinned = false;\n    setTopic(topic);\n    setPosts(arr => [...posts]);\n  };\n\n  const handleDeletePost = async (ev, post) => {\n    const postDoc = doc(db, \"posts\", post.postId);\n    setPosts(arr => [...posts]);\n    const topicDoc = doc(db, \"topics\", topic.topicId);\n\n    if (post.pinned == true) {\n      await updateDoc(topicDoc, {\n        haspinned: false\n      });\n      topic.haspinned = false;\n    }\n\n    await updateDoc(topicDoc, {\n      comment: topic.comment - 1\n    });\n    setTopic(topic);\n    deleteDoc(postDoc);\n  };\n\n  const checkIsTeacher = () => {\n    if (currentUser.role == \"teacher\") return true;else return false;\n  };\n\n  const setIconColor = (likeId, uId) => {\n    if (likeId != null && likeId.includes(uId) == true) return \"green\";\n    return \"black\";\n  };\n\n  const setUserIconColor = user => {\n    if (currentUser.displayname == user) return \"red\";\n    return \"black\";\n  };\n\n  const handlePostModal = async () => {\n    console.log(\"AAhahahaA\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sidebar, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: \"100%\"\n      },\n      header: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: topic.topicTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this),\n      meta: topic.topicSubject,\n      description: topic.topicDescription,\n      extra: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [topic.topicImage != null && /*#__PURE__*/_jsxDEV(Image, {\n          src: topic.topicImage,\n          size: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            color: setUserIconColor(topic.user),\n            name: \"user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), topic.user]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: e => handleLikeClick(e, topic),\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              color: setIconColor(topic.likeId, currentUser.uid),\n              name: \"thumbs up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), topic.likeIdCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: e => handledisLikeClick(e, topic),\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              color: setIconColor(topic.dislikeId, currentUser.uid),\n              name: \"thumbs down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), topic.dislikeIdCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostModal, {\n      topicId: topicId,\n      curComment: topic.comment,\n      onShow: handlePostModal()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      as: \"h4\",\n      className: \"header\",\n      horizontal: true,\n      style: {\n        margin: '5em 0em',\n        textTransform: 'uppercase'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: \"100%\",\n          margin: '0em 0em 0em 0em',\n          backgroundColor: post.pinned == true ? 'HoneyDew' : 'white'\n        },\n        className: \"e-card-horizontal\",\n        header: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              color: setUserIconColor(post.user),\n              name: \"user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this), post.user, checkIsTeacher() == true && /*#__PURE__*/_jsxDEV(Button, {\n              icon: \"delete\",\n              size: \"tiny\",\n              style: {\n                display: 'relative',\n                float: 'right'\n              },\n              onClick: e => handleDeletePost(e, post)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this)\n        }, void 0, false),\n        description: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Container, {\n            children: post.postTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Rail, {\n            close: true,\n            position: \"right\",\n            children: /*#__PURE__*/_jsxDEV(Button.Group, {\n              vertical: true,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: e => handleLikeClick(e, post),\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  color: setIconColor(post.likeId, currentUser.uid),\n                  name: \"thumbs up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 21\n                }, this), post.likeIdCount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"---\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: e => handledisLikeClick(e, post),\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  color: setIconColor(post.dislikeId, currentUser.uid),\n                  name: \"thumbs down\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 21\n                }, this), post.dislikeIdCount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Image, {\n            src: post.postImage,\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true),\n        extra: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [checkIsTeacher() == true && topic.haspinned == false && /*#__PURE__*/_jsxDEV(Button, {\n            icon: \"check circle\",\n            style: {\n              display: 'flex',\n              float: 'right'\n            },\n            onClick: e => handlePin(e, post)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 21\n          }, this), checkIsTeacher() == true && post.pinned == true && /*#__PURE__*/_jsxDEV(Button, {\n            icon: \"undo\",\n            style: {\n              display: 'flex',\n              float: 'right'\n            },\n            onClick: e => handleUnPin(e, post)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Topic, \"Om6MpZS9vKRnKs/Rd5GMRl7H1Ds=\", false, function () {\n  return [useParams, useUserContext];\n});\n\n_c = Topic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Topic\");","map":{"version":3,"sources":["E:/Uni/Project/qna_forum/Agora v1.0.2/src/components/Topic/Topic.js"],"names":["React","useEffect","useState","PostModal","useParams","Sidebar","Button","Checkbox","Form","Card","Icon","Label","Image","TextArea","Container","Rail","Divider","Segment","Header","v4","uuidv4","collection","query","where","getDocs","addDoc","deleteDoc","serverTimestamp","onSnapshot","orderBy","setDoc","doc","updateDoc","arrayUnion","useUserContext","db","Topic","topicId","currentUser","posts","setPosts","formState","setFormState","topic","setTopic","getTopic","q","querySnapshot","docs","map","post","data","console","log","topicDescription","likeId","likeIdCount","Object","keys","length","dislikeId","dislikeIdCount","haspinned","err","getPosts","unsub","sort","a","b","ap","bp","pinned","createdAt","index","handleLikeClick","ev","parent","preventDefault","role","includes","uid","parentDoc","postId","push","handledisLikeClick","handlePin","postDoc","topicDoc","arr","handleUnPin","handleDeletePost","comment","checkIsTeacher","setIconColor","uId","setUserIconColor","user","displayname","handlePostModal","width","topicTitle","topicSubject","topicImage","e","margin","textTransform","backgroundColor","display","float","postTitle","postImage"],"mappings":"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","sourcesContent":["\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { PostModal } from \"../Dashboard/PostModal\"\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Sidebar } from \"../Dashboard/Sidebar\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Form,\r\n  Card,\r\n  Icon,\r\n  Label,\r\n  Image,\r\n  TextArea,\r\n  Container,\r\n  Rail,\r\n  Divider,\r\n  Segment,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {\r\n  collection,\r\n  query,\r\n  where,\r\n  getDocs,\r\n  addDoc,\r\n  deleteDoc,\r\n  serverTimestamp,\r\n  onSnapshot,\r\n  orderBy,\r\n  setDoc,\r\n  doc,\r\n  updateDoc,\r\n  arrayUnion,\r\n} from \"firebase/firestore\";\r\nimport { useUserContext } from \"../../context/userContext\";\r\nimport { db } from \"../../firebase-config\";\r\nexport const Topic = () => {\r\n  const { topicId } = useParams();\r\n  const { currentUser } = useUserContext();\r\n  const [ posts, setPosts ] = useState( [] );\r\n  const [ formState, setFormState ] = useState( \"\" );\r\n  const [ topic, setTopic ] = useState( {} );\r\n\r\n  useEffect( () => {\r\n    async function getTopic() {\r\n      try {\r\n        const q = query(\r\n          collection( db, \"topics\" ),\r\n          where( \"topicId\", \"==\", topicId )\r\n        );\r\n\r\n        const querySnapshot = await getDocs( q );\r\n        const [ topic ] = querySnapshot.docs.map( ( post ) => post.data() );\r\n        console.log( \"Des\" + topic.topicDescription );\r\n        if ( topic.likeId != null )\r\n          topic.likeIdCount = Object.keys( topic.likeId ).length;\r\n        else topic.likeIdCount = 0;\r\n        if ( topic.dislikeId != null )\r\n          topic.dislikeIdCount = Object.keys( topic.dislikeId ).length;\r\n        else topic.dislikeIdCount = 0;\r\n        if ( topic.haspinned == null )\r\n          topic.haspinned = false;\r\n        setTopic( topic );\r\n      } catch ( err ) {\r\n        console.log( err );\r\n      }\r\n    }\r\n    getTopic();\r\n  }, [] );\r\n\r\n  useEffect( () => {\r\n    async function getPosts() {\r\n      try {\r\n        const q = query(\r\n          collection( db, \"posts\" ),\r\n          where( \"topicId\", \"==\", topicId )\r\n        );\r\n        console.log( \"getPosts\" );\r\n        const unsub = await onSnapshot( q, ( querySnapshot ) => {\r\n          const posts = querySnapshot.docs\r\n            .map( ( post ) => post.data() )\r\n            //.sort( ( a, b ) => ( b.createdAt - a.createdAt ) );\r\n            .sort( function ( a, b ) {\r\n\r\n              var ap, bp;\r\n              if ( a.likeId != null ) ap = Object.keys( a.likeId ).length;\r\n              if ( b.likeId != null ) bp = Object.keys( b.likeId ).length;\r\n              return b.pinned - a.pinned || bp - ap || b.createdAt - a.createdAt;\r\n            } );\r\n          {\r\n            posts.map( ( post, index ) => {\r\n              //            console.log(post.createdAt + (post.pinned == true ? 1000000000000: 0 ));\r\n              if ( post.likeId != null )\r\n                post.likeIdCount = Object.keys( post.likeId ).length;\r\n              else post.likeIdCount = 0;\r\n              if ( post.dislikeId != null )\r\n                post.dislikeIdCount = Object.keys( post.dislikeId ).length;\r\n              else post.dislikeIdCount = 0;\r\n            } )\r\n          }\r\n          setPosts( posts );\r\n\r\n        } );\r\n\r\n        return unsub;\r\n      } catch ( err ) {\r\n        console.log( err );\r\n      }\r\n    }\r\n    return getPosts();\r\n  }, [] );\r\n\r\n  const handleLikeClick = async ( ev, parent ) => {\r\n    ev.preventDefault();\r\n    if ( currentUser.role != \"teacher\" ) return;\r\n    //       if(parent)\r\n    console.log( currentUser.role );\r\n    if ( parent.likeId.includes( currentUser.uid ) == false &&\r\n      parent.dislikeId.includes( currentUser.uid ) == false ) {\r\n      var parentDoc;\r\n      if ( parent === topic )\r\n        parentDoc = doc( db, \"topics\", parent.topicId );\r\n      else parentDoc = doc( db, \"posts\", parent.postId );\r\n      await updateDoc( parentDoc, {\r\n        likeId: arrayUnion( currentUser.uid ),\r\n      } )\r\n      parent.likeIdCount++;\r\n      parent.likeId.push( currentUser.uid );\r\n      //setTopic(arr=>[...topics]);\r\n    }\r\n  }\r\n\r\n  const handledisLikeClick = async ( ev, parent ) => {\r\n    ev.preventDefault();\r\n    console.log( currentUser.role );\r\n    if ( parent.likeId.includes( currentUser.uid ) == false &&\r\n      parent.dislikeId.includes( currentUser.uid ) == false ) {\r\n      var parentDoc;\r\n      if ( parent === topic )\r\n        parentDoc = doc( db, \"topics\", parent.topicId );\r\n      else parentDoc = doc( db, \"posts\", parent.postId );\r\n      await updateDoc( parentDoc, {\r\n        dislikeId: arrayUnion( currentUser.uid ),\r\n      } );\r\n      parent.dislikeIdCount++;\r\n      parent.dislikeId.push( currentUser.uid );\r\n      //setTopic(arr=>[...topics]);\r\n    }\r\n  }\r\n  const handlePin = async ( ev, post ) => {\r\n    console.log( \"BBBBB\" );\r\n    const postDoc = doc( db, \"posts\", post.postId );\r\n    await updateDoc( postDoc,\r\n      {\r\n        pinned: true,\r\n      } );\r\n    post.pinned = true;\r\n    const topicDoc = doc( db, \"topics\", topic.topicId );\r\n    await updateDoc( topicDoc, {\r\n      haspinned: true,\r\n    } );\r\n    topic.haspinned = true;\r\n    setTopic( topic );\r\n    setPosts( arr => [ ...posts ] );\r\n\r\n  }\r\n  const handleUnPin = async ( ev, post ) => {\r\n    console.log( \"BBBBB\" );\r\n    const postDoc = doc( db, \"posts\", post.postId );\r\n    await updateDoc( postDoc,\r\n      {\r\n        pinned: false,\r\n      } );\r\n    post.pinned = false;\r\n    const topicDoc = doc( db, \"topics\", topic.topicId );\r\n    await updateDoc( topicDoc, {\r\n      haspinned: false,\r\n    } );\r\n    topic.haspinned = false;\r\n    setTopic( topic );\r\n    setPosts( arr => [ ...posts ] );\r\n\r\n  }\r\n\r\n  const handleDeletePost = async (ev,post) => {\r\n    const postDoc = doc( db, \"posts\", post.postId );\r\n    setPosts( arr => [ ...posts ] );\r\n    const topicDoc = doc( db, \"topics\", topic.topicId );\r\n    if(post.pinned == true)\r\n    {\r\n     \r\n      await updateDoc( topicDoc, {\r\n        haspinned: false,\r\n      } );\r\n      topic.haspinned = false;\r\n    }\r\n    await updateDoc( topicDoc, {\r\n      comment: topic.comment-1,\r\n    } );\r\n    setTopic( topic );    \r\n    deleteDoc(postDoc);\r\n  }\r\n  const checkIsTeacher = () => {\r\n    if ( currentUser.role == \"teacher\" ) return true;\r\n    else return false;\r\n  }\r\n  const setIconColor = ( likeId, uId ) => {\r\n    if ( likeId != null && likeId.includes( uId ) == true )\r\n      return \"green\";\r\n    return \"black\";\r\n  }\r\n\r\n  const setUserIconColor = ( user ) => {\r\n    if ( currentUser.displayname == user )\r\n      return \"red\";\r\n    return \"black\";\r\n  }\r\n  const handlePostModal = async () => {\r\n    console.log( \"AAhahahaA\" );\r\n  }\r\n  return (\r\n    <Sidebar >\r\n      {/* <Card style={{ width: \"100%\" }}>\r\n        <Card.Content style={{ width: \"100% !important\" }}>\r\n          <Card.Header>{topic.topicTitle}</Card.Header>\r\n          <Card.Meta>{topic.topicSubject}</Card.Meta>\r\n          <Image src={topic.topicImage} size=\"huge\" />\r\n          <Card.Description>{topic.topicDescription}</Card.Description>\r\n          <Label>{topic.user}</Label>\r\n        </Card.Content>\r\n        \r\n      </Card> */}\r\n      <Card\r\n        style={ { width: \"100%\" } }\r\n        header={<h1 >\r\n        {topic.topicTitle}\r\n        </h1>  }\r\n        meta={ topic.topicSubject }\r\n        description={ topic.topicDescription }\r\n        extra={\r\n          <div >\r\n            {topic.topicImage!=null && <Image src={ topic.topicImage } size=\"medium\" />}\r\n            <h4>\r\n              <Icon color={ setUserIconColor( topic.user ) } name=\"user\" />\r\n              { topic.user }\r\n            </h4>\r\n            { <div>\r\n              <Button onClick={ ( e ) => handleLikeClick( e, topic ) }>\r\n                <Icon color={ setIconColor( topic.likeId, currentUser.uid ) } name='thumbs up' />\r\n                { topic.likeIdCount }\r\n              </Button>\r\n              <Button onClick={ ( e ) => handledisLikeClick( e, topic ) }>\r\n                <Icon color={ setIconColor( topic.dislikeId, currentUser.uid ) } name='thumbs down' />\r\n                { topic.dislikeIdCount }\r\n              </Button>\r\n              {/* <Button disabled>\r\n                        <Icon color={setIconColor(topic.likeId,currentUser.uid)} name='comment' />\r\n                        {topic.comment}\r\n                        </Button> */}\r\n            </div> }\r\n\r\n          </div>\r\n        }\r\n      />\r\n\r\n      <PostModal topicId={ topicId } curComment={ topic.comment } onShow={ handlePostModal() } />\r\n      <Divider\r\n        as='h4'\r\n        className='header'\r\n        horizontal\r\n        style={ { margin: '5em 0em', textTransform: 'uppercase' } }\r\n      >\r\n        <a >Answers</a>\r\n      </Divider>\r\n\r\n      <Container >\r\n        { posts.map( ( post ) => (\r\n          <Card\r\n\r\n            style={ { width: \"100%\", margin: '0em 0em 0em 0em', backgroundColor: post.pinned == true ? 'HoneyDew' : 'white' } }\r\n            className=\"e-card-horizontal\"\r\n            header={ <>\r\n              <h3>\r\n                <Icon color={ setUserIconColor( post.user ) } name=\"user\" />\r\n                { post.user }\r\n                { checkIsTeacher() == true &&\r\n                  ( <Button icon='delete' size='tiny' style={ { display: 'relative', float: 'right'} } onClick={ ( e ) => handleDeletePost( e, post ) }/>\r\n                  )\r\n                }\r\n              </h3>\r\n            </>\r\n            }\r\n            description={ <>\r\n              <Container>{ post.postTitle }</Container>\r\n              <Rail close position='right'>\r\n                <Button.Group vertical>\r\n                  <Button onClick={ ( e ) => handleLikeClick( e, post ) } >\r\n                    <Icon color={ setIconColor( post.likeId, currentUser.uid ) } name='thumbs up' />\r\n                    { post.likeIdCount }\r\n                  </Button>\r\n                  <div>---</div>\r\n                  <Button onClick={ ( e ) => handledisLikeClick( e, post ) }>\r\n                    <Icon color={ setIconColor( post.dislikeId, currentUser.uid ) } name='thumbs down' />\r\n                    { post.dislikeIdCount }\r\n                  </Button>\r\n\r\n                </Button.Group>\r\n              </Rail>\r\n\r\n              <Image src={ post.postImage } size=\"small\" />\r\n\r\n            </> }\r\n            extra={\r\n              <div >\r\n                { checkIsTeacher() == true && topic.haspinned == false &&\r\n                  ( <Button icon='check circle' style={ { display: 'flex', float: 'right' } } onClick={ ( e ) => handlePin( e, post ) }>\r\n                  </Button> )\r\n                }\r\n                \r\n                { checkIsTeacher() == true && post.pinned == true &&\r\n                  ( <Button icon='undo' style={ { display: 'flex', float: 'right' } } onClick={ ( e ) => handleUnPin( e, post ) }>\r\n                  </Button> )\r\n                }\r\n              </div>\r\n\r\n            }\r\n          />\r\n        ) ) }\r\n\r\n      </Container>\r\n\r\n    </Sidebar>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}