{"ast":null,"code":"var _jsxFileName = \"E:\\\\Uni\\\\Project\\\\qna_forum\\\\Agora v1.0.2\\\\src\\\\context\\\\userContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useState, useEffect, useContext } from \"react\";\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, onAuthStateChanged, signOut as signout, updatePassword, updateEmail } from \"firebase/auth\";\nimport { auth, db } from \"../firebase-config\";\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport function UserContextProvider(props) {\n  _s();\n\n  const updateUserPassword = pwd => updatePassword(pwd);\n\n  const updateUserEmail = email => updateEmail(email);\n\n  const signUp = (email, pwd) => createUserWithEmailAndPassword(auth, email, pwd);\n\n  const signIn = (email, pwd) => signInWithEmailAndPassword(auth, email, pwd);\n\n  const signOut = async () => await signout(auth);\n\n  const [currentUser, setCurrentUser] = useState();\n  const [loadingData, setLoadingData] = useState(true);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async curUser => {\n      if (curUser) {\n        console.log(\"AAA\" + curUser.uid);\n        const userRole = await getDocs(query(collection(db, \"users\"), where(\"uid\", \"==\", curUser.uid)));\n        setCurrentUser({ ...curUser,\n          uid: userRole.docs[0].data().uid,\n          role: userRole.docs[0].data().role,\n          approval: userRole.docs[0].data().approval,\n          address: userRole.docs[0].data().address,\n          birthdate: userRole.docs[0].data().birthdate,\n          displayname: userRole.docs[0].data().uname,\n          email: userRole.docs[0].data().email,\n          uname: userRole.docs[0].data().uname,\n          phone: userRole.docs[0].data().phone,\n          avatar: userRole.docs[0].data().avatar\n        }); //setCurrentUser({ ...currentUser, approval: userRole.docs[0].data().approval });\n      } else {\n        console.log(\"BBB\");\n        setCurrentUser(curUser);\n      }\n\n      setLoadingData(false);\n    });\n    return unsubscribe;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      updateUserPassword,\n      signUp,\n      currentUser,\n      signIn,\n      signOut\n    },\n    children: !loadingData && props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserContextProvider, \"8G11jKqPCI2gX/mmZEZgxmqK8O4=\");\n\n_c = UserContextProvider;\nexport const useUserContext = () => {\n  _s2();\n\n  return useContext(UserContext);\n};\n\n_s2(useUserContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"sources":["E:/Uni/Project/qna_forum/Agora v1.0.2/src/context/userContext.js"],"names":["createContext","useState","useEffect","useContext","signInWithEmailAndPassword","createUserWithEmailAndPassword","onAuthStateChanged","signOut","signout","updatePassword","updateEmail","auth","db","collection","getDocs","query","where","UserContext","UserContextProvider","props","updateUserPassword","pwd","updateUserEmail","email","signUp","signIn","currentUser","setCurrentUser","loadingData","setLoadingData","unsubscribe","curUser","console","log","uid","userRole","docs","data","role","approval","address","birthdate","displayname","uname","phone","avatar","children","useUserContext"],"mappings":"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","sourcesContent":["import { createContext, useState, useEffect, useContext } from \"react\";\r\n\r\nimport {\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  signOut as signout,\r\n  updatePassword,\r\n  updateEmail,\r\n} from \"firebase/auth\";\r\nimport { auth, db } from \"../firebase-config\";\r\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport function UserContextProvider(props) {\r\n  const updateUserPassword = (pwd) =>\r\n    updatePassword(pwd);\r\n  const updateUserEmail =(email) =>\r\n    updateEmail(email);\r\n  const signUp = (email, pwd) =>\r\n    createUserWithEmailAndPassword(auth, email, pwd);\r\n  const signIn = (email, pwd) => signInWithEmailAndPassword(auth, email, pwd);\r\n  const signOut = async () => await signout(auth);\r\n\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loadingData, setLoadingData] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, async (curUser) => {\r\n      if (curUser) {\r\n        console.log(\"AAA\"+curUser.uid);\r\n\r\n        const userRole = await getDocs(\r\n          query(collection(db, \"users\"), where(\"uid\", \"==\", curUser.uid))\r\n        );\r\n        setCurrentUser({ ...curUser,\r\n          uid:userRole.docs[0].data().uid,\r\n          role: userRole.docs[0].data().role,\r\n          approval: userRole.docs[0].data().approval,\r\n          address:userRole.docs[0].data().address,\r\n          birthdate:userRole.docs[0].data().birthdate,\r\n          displayname:userRole.docs[0].data().uname,\r\n          email:userRole.docs[0].data().email,\r\n          uname:userRole.docs[0].data().uname,\r\n          phone:userRole.docs[0].data().phone,\r\n          avatar: userRole.docs[0].data().avatar,\r\n         });\r\n        //setCurrentUser({ ...currentUser, approval: userRole.docs[0].data().approval });\r\n\r\n      } else {\r\n        console.log(\"BBB\");\r\n        setCurrentUser(curUser);\r\n      }\r\n\r\n      setLoadingData(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  return (\r\n    <UserContext.Provider value={{updateUserPassword, signUp, currentUser, signIn, signOut }}>\r\n      {!loadingData && props.children}\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useUserContext = () => useContext(UserContext);\r\n"]},"metadata":{},"sourceType":"module"}