{"ast":null,"code":"var _jsxFileName = \"D:\\\\firebase-moodle\\\\moodle\\\\src\\\\components\\\\Dashboard\\\\QuizModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Checkbox, Form, Input, Radio, Select, Modal, TextArea } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuizModal = _ref => {\n  _s();\n\n  let {\n    subjectOptions\n  } = _ref;\n  const [open, setOpen] = useState(false);\n  const [formState, setFormState] = useState({\n    answer1: \"\",\n    answer2: \"\",\n    answer3: \"\",\n    answer4: \"\",\n    question: \"\",\n    subject: \"\",\n    correctAnswer: \"\"\n  });\n\n  const handleChange = ev => {\n    setFormState(prev => ({ ...prev,\n      [ev.target.id]: ev.target.value\n    }));\n  };\n\n  const handleQuiz = ev => {\n    try {\n      ev.preventDefault();\n    } catch {}\n  };\n\n  const options = [{\n    key: \"1\",\n    text: \"Answer 1\",\n    value: \"answer1\"\n  }, {\n    key: \"2\",\n    text: \"Answer 2\",\n    value: \"answer2\"\n  }, {\n    key: \"3\",\n    text: \"Answer 3\",\n    value: \"answer3\"\n  }, {\n    key: \"4\",\n    text: \"Answer 4\",\n    value: \"answer4\"\n  }];\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    open: open,\n    trigger: /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Create a quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            control: TextArea,\n            label: \"Question\",\n            value: formState.question,\n            id: \"question\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Select,\n            label: \"Topic Subject\",\n            options: subjectOptions,\n            placeholder: \"Subject\",\n            id: \"topicSubject\",\n            value: formState.subject,\n            onChange: (ev, data) => {\n              setFormState(prev => ({ ...prev,\n                subject: data.value\n              }));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            widths: \"equal\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              control: Input,\n              label: \"Answer 1\",\n              id: \"answer1\",\n              value: formState.answer1,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              control: Input,\n              label: \"Answer 2\",\n              id: \"answer2\",\n              value: formState.answer2,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            widths: \"equal\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              control: Input,\n              label: \"Answer 3\",\n              id: \"answer3\",\n              value: formState.answer3,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              control: Input,\n              label: \"Answer 4\",\n              value: formState.answer4,\n              id: \"answer4\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Select,\n            label: \"Correct Answer\",\n            value: formState.correctAnswer,\n            onChange: (ev, data) => {\n              setFormState(prev => ({ ...prev,\n                correctAnswer: data.value\n              }));\n            },\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Button,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuizModal, \"EvhO21cr+zx7jtRo86ft1wrW2/0=\");\n\n_c = QuizModal;\nexport default QuizModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizModal\");","map":{"version":3,"sources":["D:/firebase-moodle/moodle/src/components/Dashboard/QuizModal.js"],"names":["React","useState","Button","Checkbox","Form","Input","Radio","Select","Modal","TextArea","QuizModal","subjectOptions","open","setOpen","formState","setFormState","answer1","answer2","answer3","answer4","question","subject","correctAnswer","handleChange","ev","prev","target","id","value","handleQuiz","preventDefault","options","key","text","data"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Form,\r\n  Input,\r\n  Radio,\r\n  Select,\r\n  Modal,\r\n  TextArea,\r\n} from \"semantic-ui-react\";\r\n\r\nconst QuizModal = ({ subjectOptions }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [formState, setFormState] = useState({\r\n    answer1: \"\",\r\n    answer2: \"\",\r\n    answer3: \"\",\r\n    answer4: \"\",\r\n    question: \"\",\r\n    subject: \"\",\r\n    correctAnswer: \"\",\r\n  });\r\n\r\n  const handleChange = (ev) => {\r\n    setFormState((prev) => ({ ...prev, [ev.target.id]: ev.target.value }));\r\n  };\r\n\r\n  const handleQuiz = (ev) => {\r\n    try {\r\n      ev.preventDefault();\r\n    } catch {}\r\n  };\r\n  const options = [\r\n    { key: \"1\", text: \"Answer 1\", value: \"answer1\" },\r\n    { key: \"2\", text: \"Answer 2\", value: \"answer2\" },\r\n    { key: \"3\", text: \"Answer 3\", value: \"answer3\" },\r\n    { key: \"4\", text: \"Answer 4\", value: \"answer4\" },\r\n  ];\r\n  return (\r\n    <Modal\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      trigger={<Button>Create a quiz</Button>}\r\n    >\r\n      <Modal.Header>Quiz</Modal.Header>\r\n      <Modal.Content>\r\n        <Modal.Description>\r\n          <Form>\r\n            <Form.Field\r\n              control={TextArea}\r\n              label=\"Question\"\r\n              value={formState.question}\r\n              id=\"question\"\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Field\r\n              control={Select}\r\n              label=\"Topic Subject\"\r\n              options={subjectOptions}\r\n              placeholder=\"Subject\"\r\n              id=\"topicSubject\"\r\n              value={formState.subject}\r\n              onChange={(ev, data) => {\r\n                setFormState((prev) => ({ ...prev, subject: data.value }));\r\n              }}\r\n            />\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Field\r\n                control={Input}\r\n                label=\"Answer 1\"\r\n                id=\"answer1\"\r\n                value={formState.answer1}\r\n                onChange={handleChange}\r\n              />\r\n              <Form.Field\r\n                control={Input}\r\n                label=\"Answer 2\"\r\n                id=\"answer2\"\r\n                value={formState.answer2}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Field\r\n                control={Input}\r\n                label=\"Answer 3\"\r\n                id=\"answer3\"\r\n                value={formState.answer3}\r\n                onChange={handleChange}\r\n              />\r\n              <Form.Field\r\n                control={Input}\r\n                label=\"Answer 4\"\r\n                value={formState.answer4}\r\n                id=\"answer4\"\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Field\r\n              control={Select}\r\n              label=\"Correct Answer\"\r\n              value={formState.correctAnswer}\r\n              onChange={(ev, data) => {\r\n                setFormState((prev) => ({\r\n                  ...prev,\r\n                  correctAnswer: data.value,\r\n                }));\r\n              }}\r\n              options={options}\r\n            />\r\n            <Form.Field control={Button}>Submit</Form.Field>\r\n          </Form>\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default QuizModal;\r\n"]},"metadata":{},"sourceType":"module"}