{"ast":null,"code":"var _jsxFileName = \"D:\\\\firebase-moodle\\\\moodle\\\\src\\\\components\\\\Topic\\\\Topic.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Sidebar } from \"../Dashboard/Sidebar\";\nimport { Button, Checkbox, Form, Card, Icon } from \"semantic-ui-react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { collection, query, where, getDocs, addDoc, serverTimestamp, onSnapshot, orderBy } from \"firebase/firestore\";\nimport { useUserContext } from \"../../context/userContext\";\nimport { db } from \"../../firebase-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Topic = () => {\n  _s();\n\n  const {\n    topicId\n  } = useParams();\n  const {\n    currentUser\n  } = useUserContext();\n  const [posts, setPosts] = useState([]);\n  const [formState, setFormState] = useState(\"\");\n  const [topic, setTopic] = useState({});\n  useEffect(() => {\n    async function getTopic() {\n      try {\n        const q = query(collection(db, \"topics\"), where(\"topicId\", \"==\", topicId));\n        const querySnapshot = await getDocs(q);\n        const [topic] = querySnapshot.docs.map(post => post.data());\n        setTopic(topic);\n        return unsub;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    return getTopic();\n  }, []);\n  useEffect(() => {\n    async function getPosts() {\n      try {\n        const q = query(collection(db, \"posts\"), where(\"topicId\", \"==\", topicId));\n        const unsub = await onSnapshot(q, querySnapshot => {\n          const posts = querySnapshot.docs.map(post => post.data()).sort((a, b) => a.createdAt - b.createdAt);\n          setPosts(posts);\n        });\n        return unsub;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    return getPosts();\n  }, []);\n\n  const handlePost = async ev => {\n    ev.preventDefault();\n\n    try {\n      if (formState === \"\") {\n        return;\n      }\n\n      const postCollRef = collection(db, \"posts\");\n      await addDoc(postCollRef, {\n        postTitle: formState,\n        user: currentUser.email,\n        uid: currentUser.uid,\n        topicId: topicId,\n        postId: uuidv4(),\n        createdAt: serverTimestamp()\n      });\n      console.log(\"here\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sidebar, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      fluid: true,\n      color: \"red\",\n      header: \"Option 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handlePost,\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: formState,\n          placeholder: \"Add a post\",\n          onChange: ev => {\n            setFormState(ev.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(Card, {\n      header: post.postTitle,\n      extra: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), post.user]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Topic, \"jEdexuNqclJOeQnER+zokI/Ig+U=\", false, function () {\n  return [useParams, useUserContext];\n});\n\n_c = Topic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Topic\");","map":{"version":3,"sources":["D:/firebase-moodle/moodle/src/components/Topic/Topic.js"],"names":["React","useEffect","useState","useParams","Sidebar","Button","Checkbox","Form","Card","Icon","v4","uuidv4","collection","query","where","getDocs","addDoc","serverTimestamp","onSnapshot","orderBy","useUserContext","db","Topic","topicId","currentUser","posts","setPosts","formState","setFormState","topic","setTopic","getTopic","q","querySnapshot","docs","map","post","data","unsub","err","console","log","getPosts","sort","a","b","createdAt","handlePost","ev","preventDefault","postCollRef","postTitle","user","email","uid","postId","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Sidebar } from \"../Dashboard/Sidebar\";\r\nimport { Button, Checkbox, Form, Card, Icon } from \"semantic-ui-react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {\r\n  collection,\r\n  query,\r\n  where,\r\n  getDocs,\r\n  addDoc,\r\n  serverTimestamp,\r\n  onSnapshot,\r\n  orderBy,\r\n} from \"firebase/firestore\";\r\nimport { useUserContext } from \"../../context/userContext\";\r\nimport { db } from \"../../firebase-config\";\r\nexport const Topic = () => {\r\n  const { topicId } = useParams();\r\n  const { currentUser } = useUserContext();\r\n  const [posts, setPosts] = useState([]);\r\n  const [formState, setFormState] = useState(\"\");\r\n  const [topic, setTopic] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function getTopic() {\r\n      try {\r\n        const q = query(\r\n          collection(db, \"topics\"),\r\n          where(\"topicId\", \"==\", topicId)\r\n        );\r\n\r\n        const querySnapshot = await getDocs(q);\r\n        const [topic] = querySnapshot.docs.map((post) => post.data());\r\n        setTopic(topic);\r\n        return unsub;\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    return getTopic();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function getPosts() {\r\n      try {\r\n        const q = query(\r\n          collection(db, \"posts\"),\r\n          where(\"topicId\", \"==\", topicId)\r\n        );\r\n\r\n        const unsub = await onSnapshot(q, (querySnapshot) => {\r\n          const posts = querySnapshot.docs\r\n            .map((post) => post.data())\r\n            .sort((a, b) => a.createdAt - b.createdAt);\r\n          setPosts(posts);\r\n        });\r\n\r\n        return unsub;\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    return getPosts();\r\n  }, []);\r\n  const handlePost = async (ev) => {\r\n    ev.preventDefault();\r\n    try {\r\n      if (formState === \"\") {\r\n        return;\r\n      }\r\n      const postCollRef = collection(db, \"posts\");\r\n      await addDoc(postCollRef, {\r\n        postTitle: formState,\r\n        user: currentUser.email,\r\n        uid: currentUser.uid,\r\n        topicId: topicId,\r\n        postId: uuidv4(),\r\n        createdAt: serverTimestamp(),\r\n      });\r\n      console.log(\"here\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <Sidebar>\r\n      <Card fluid color=\"red\" header=\"Option 1\" />\r\n      <Form onSubmit={handlePost}>\r\n        <Form.Field>\r\n          <input\r\n            value={formState}\r\n            placeholder=\"Add a post\"\r\n            onChange={(ev) => {\r\n              setFormState(ev.target.value);\r\n            }}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Button type=\"submit\">Submit</Button>\r\n      </Form>\r\n      <h1>Posts</h1>\r\n      {posts.map((post) => (\r\n        <Card\r\n          header={post.postTitle}\r\n          extra={\r\n            <a>\r\n              <Icon name=\"user\" />\r\n              {post.user}\r\n            </a>\r\n          }\r\n        />\r\n      ))}\r\n    </Sidebar>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}