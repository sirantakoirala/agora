{"ast":null,"code":"var _jsxFileName = \"D:\\\\firebase-moodle\\\\moodle\\\\src\\\\components\\\\Dashboard\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { QuestionModal } from \"./QuestionModal\";\nimport { SubjectModal } from \"./SubjectModal\";\nimport { Card, Icon, Grid } from \"semantic-ui-react\";\nimport { Sidebar } from \"./Sidebar\";\nimport { collection, query, onSnapshot, orderBy, getDocs } from \"firebase/firestore\";\nimport { db } from \"../../firebase-config\";\nimport { Link } from \"react-router-dom\";\nimport { useUserContext } from \"../../context/userContext\";\nimport QuizModal from \"./QuizModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [topics, setTopics] = useState([]);\n  const {\n    currentUser\n  } = useUserContext();\n  const [subjectOptions, setSubjectOptions] = useState([]);\n  const isNotStudentRole = currentUser.role !== \"student\";\n  useEffect(() => {\n    async function getTopics() {\n      try {\n        const q = query(collection(db, \"topics\"), orderBy(\"createdAt\", \"desc\"));\n        const unsub = await onSnapshot(q, querySnapshot => {\n          const topics = querySnapshot.docs.map(topic => topic.data());\n          setTopics(topics);\n        });\n        return unsub;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    return getTopics();\n  }, []);\n  useEffect(() => {\n    async function getSubjects() {\n      const q = query(collection(db, \"subject\"));\n      const querySnapshot = await getDocs(q);\n      const subjects = querySnapshot.docs.map((doc, id) => ({\n        value: doc.data().title,\n        key: id,\n        text: doc.data().title\n      }));\n      setSubjectOptions(subjects);\n    }\n\n    getSubjects();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Sidebar, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), isNotStudentRole && /*#__PURE__*/_jsxDEV(QuizModal, {\n      subjectOptions: subjectOptions,\n      currentUser: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), isNotStudentRole && /*#__PURE__*/_jsxDEV(SubjectModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(QuestionModal, {\n      subjectOptions: subjectOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Current Topics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        columns: \"one\",\n        children: topics.map(topic => {\n          return /*#__PURE__*/_jsxDEV(Grid.Column, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              as: Link,\n              style: {\n                width: \"80%\"\n              },\n              to: `/topic/${topic.topicId}`,\n              header: topic.topicTitle,\n              meta: topic.topicSubject,\n              extra: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"user\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 23\n                }, this), topic.user]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)\n          }, topic.topicId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"L73tPgVdIpRg4Hnk5BwerAoh7kc=\", false, function () {\n  return [useUserContext];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["D:/firebase-moodle/moodle/src/components/Dashboard/Dashboard.js"],"names":["React","useEffect","useState","QuestionModal","SubjectModal","Card","Icon","Grid","Sidebar","collection","query","onSnapshot","orderBy","getDocs","db","Link","useUserContext","QuizModal","Dashboard","topics","setTopics","currentUser","subjectOptions","setSubjectOptions","isNotStudentRole","role","getTopics","q","unsub","querySnapshot","docs","map","topic","data","err","console","log","getSubjects","subjects","doc","id","value","title","key","text","width","topicId","topicTitle","topicSubject","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { QuestionModal } from \"./QuestionModal\";\r\nimport { SubjectModal } from \"./SubjectModal\";\r\nimport { Card, Icon, Grid } from \"semantic-ui-react\";\r\nimport { Sidebar } from \"./Sidebar\";\r\n\r\nimport {\r\n  collection,\r\n  query,\r\n  onSnapshot,\r\n  orderBy,\r\n  getDocs,\r\n} from \"firebase/firestore\";\r\nimport { db } from \"../../firebase-config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useUserContext } from \"../../context/userContext\";\r\nimport QuizModal from \"./QuizModal\";\r\n\r\nconst Dashboard = () => {\r\n  const [topics, setTopics] = useState([]);\r\n  const { currentUser } = useUserContext();\r\n  const [subjectOptions, setSubjectOptions] = useState([]);\r\n\r\n  const isNotStudentRole = currentUser.role !== \"student\";\r\n  useEffect(() => {\r\n    async function getTopics() {\r\n      try {\r\n        const q = query(collection(db, \"topics\"), orderBy(\"createdAt\", \"desc\"));\r\n\r\n        const unsub = await onSnapshot(q, (querySnapshot) => {\r\n          const topics = querySnapshot.docs.map((topic) => topic.data());\r\n          setTopics(topics);\r\n        });\r\n\r\n        return unsub;\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    return getTopics();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function getSubjects() {\r\n      const q = query(collection(db, \"subject\"));\r\n\r\n      const querySnapshot = await getDocs(q);\r\n      const subjects = querySnapshot.docs.map((doc, id) => ({\r\n        value: doc.data().title,\r\n        key: id,\r\n        text: doc.data().title,\r\n      }));\r\n      setSubjectOptions(subjects);\r\n    }\r\n    getSubjects();\r\n  }, []);\r\n\r\n  return (\r\n    <Sidebar>\r\n      <h1>Dashboard</h1>\r\n\r\n      {isNotStudentRole && (\r\n        <QuizModal subjectOptions={subjectOptions} currentUser={currentUser} />\r\n      )}\r\n      {isNotStudentRole && <SubjectModal />}\r\n      <QuestionModal subjectOptions={subjectOptions} />\r\n\r\n      <div>\r\n        <h1>Current Topics</h1>\r\n        <Grid columns=\"one\">\r\n          {topics.map((topic) => {\r\n            return (\r\n              <Grid.Column key={topic.topicId}>\r\n                <Card\r\n                  as={Link}\r\n                  style={{ width: \"80%\" }}\r\n                  to={`/topic/${topic.topicId}`}\r\n                  header={topic.topicTitle}\r\n                  meta={topic.topicSubject}\r\n                  extra={\r\n                    <a>\r\n                      <Icon name=\"user\" />\r\n                      {topic.user}\r\n                    </a>\r\n                  }\r\n                />\r\n              </Grid.Column>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </div>\r\n    </Sidebar>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}