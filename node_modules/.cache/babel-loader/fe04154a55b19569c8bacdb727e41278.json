{"ast":null,"code":"var _jsxFileName = \"D:\\\\firebase-moodle\\\\moodle\\\\src\\\\components\\\\Quizzes\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport { useUserContext } from \"../../context/userContext\";\nimport { db } from \"../../firebase-config\";\nimport { useEffect, useState } from \"react\";\nimport { collection, query, onSnapshot, orderBy, getDocs, where } from \"firebase/firestore\";\nimport { Sidebar } from \"../Dashboard/Sidebar\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Button, Card, Image, Form, Radio } from \"semantic-ui-react\";\nimport QuizModal from \"../Dashboard/QuizModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Quiz = () => {\n  _s();\n\n  const {\n    subject\n  } = useParams();\n  const {\n    currentUser\n  } = useUserContext();\n  const [subjectQuizzes, setSubjectQuizzes] = useState([]);\n  useEffect(() => {\n    async function getSubjects() {\n      const q = query(collection(db, \"quizzes\"), where(\"subject\", \"==\", subject));\n      const querySnapshot = await getDocs(q);\n      const quizzes = querySnapshot.docs.map(doc => doc.data());\n      setSubjectQuizzes(quizzes);\n    }\n\n    getSubjects();\n  }, []);\n\n  const handleChange = (e, _ref) => {\n    let {\n      value\n    } = _ref;\n    return this.setState({\n      value\n    });\n  };\n\n  const options = [{\n    key: \"1\",\n    text: subject,\n    value: subject\n  }];\n  console.log(subjectQuizzes);\n  return /*#__PURE__*/_jsxDEV(Sidebar, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Quiz - \", subject]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuizModal, {\n      subjectOptions: options,\n      currentUser: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: subjectQuizzes.map(quiz => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: quiz.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Description, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n            extra: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              children: /*#__PURE__*/_jsxDEV(Radio, {\n                label: quiz.answer1,\n                name: \"radioGroup\",\n                value: quiz.answer1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: /*#__PURE__*/_jsxDEV(Radio, {\n                label: quiz.answer2,\n                name: \"radioGroup\",\n                value: quiz.answer2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: /*#__PURE__*/_jsxDEV(Radio, {\n                label: quiz.answer3,\n                name: \"radioGroup\",\n                value: quiz.answer3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: /*#__PURE__*/_jsxDEV(Radio, {\n                label: quiz.answer4,\n                name: \"radioGroup\",\n                value: quiz.answer4\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Quiz, \"AykqVX49rohfBxCQBmaOqNHx1EM=\", false, function () {\n  return [useParams, useUserContext];\n});\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["D:/firebase-moodle/moodle/src/components/Quizzes/Quiz.js"],"names":["useUserContext","db","useEffect","useState","collection","query","onSnapshot","orderBy","getDocs","where","Sidebar","Link","useParams","Button","Card","Image","Form","Radio","QuizModal","Quiz","subject","currentUser","subjectQuizzes","setSubjectQuizzes","getSubjects","q","querySnapshot","quizzes","docs","map","doc","data","handleChange","e","value","setState","options","key","text","console","log","quiz","width","question","answer1","answer2","answer3","answer4"],"mappings":"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","sourcesContent":["import { useUserContext } from \"../../context/userContext\";\r\nimport { db } from \"../../firebase-config\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  collection,\r\n  query,\r\n  onSnapshot,\r\n  orderBy,\r\n  getDocs,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { Sidebar } from \"../Dashboard/Sidebar\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Button, Card, Image, Form, Radio } from \"semantic-ui-react\";\r\nimport QuizModal from \"../Dashboard/QuizModal\";\r\n\r\nexport const Quiz = () => {\r\n  const { subject } = useParams();\r\n  const { currentUser } = useUserContext();\r\n\r\n  const [subjectQuizzes, setSubjectQuizzes] = useState([]);\r\n  useEffect(() => {\r\n    async function getSubjects() {\r\n      const q = query(\r\n        collection(db, \"quizzes\"),\r\n        where(\"subject\", \"==\", subject)\r\n      );\r\n\r\n      const querySnapshot = await getDocs(q);\r\n      const quizzes = querySnapshot.docs.map((doc) => doc.data());\r\n\r\n      setSubjectQuizzes(quizzes);\r\n    }\r\n    getSubjects();\r\n  }, []);\r\n\r\n  const handleChange = (e, { value }) => this.setState({ value });\r\n\r\n  const options = [{ key: \"1\", text: subject, value: subject }];\r\n\r\n  console.log(subjectQuizzes);\r\n  return (\r\n    <Sidebar>\r\n      <h1>Quiz - {subject}</h1>\r\n\r\n      <QuizModal subjectOptions={options} currentUser={currentUser} />\r\n\r\n      <Form>\r\n        {subjectQuizzes.map((quiz) => {\r\n          return (\r\n            <Card style={{ width: \"100%\" }}>\r\n              <Card.Content>\r\n                <Card.Header>{quiz.question}</Card.Header>\r\n                <Card.Description></Card.Description>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Form.Field>\r\n                  <Radio\r\n                    label={quiz.answer1}\r\n                    name=\"radioGroup\"\r\n                    value={quiz.answer1}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <Radio\r\n                    label={quiz.answer2}\r\n                    name=\"radioGroup\"\r\n                    value={quiz.answer2}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <Radio\r\n                    label={quiz.answer3}\r\n                    name=\"radioGroup\"\r\n                    value={quiz.answer3}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <Radio\r\n                    label={quiz.answer4}\r\n                    name=\"radioGroup\"\r\n                    value={quiz.answer4}\r\n                  />\r\n                </Form.Field>\r\n              </Card.Content>\r\n            </Card>\r\n          );\r\n        })}\r\n      </Form>\r\n    </Sidebar>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}